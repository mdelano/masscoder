%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (Kate) ()
%%Title: (flying birds silhouettes.eps)
%%CreationDate: 2/28/2010 11:02 PM
%%Canvassize: 16383
%%BoundingBox: 0 -129 1001 729
%%HiResBoundingBox: 0.495117 -128.3555 1000.4941 728.0088
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI3_IncludePlacedImages
%AI7_ImageSettings: 1
%%RGBProcessColor: 0 0 0 ([Registration])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 500.5 299.6826 500.5 299.6826
%AI3_TileBox: 104 -6 896 606
%AI3_DocumentPreview: Header
%AI5_ArtSize: 1000 856.3652
%AI5_RulerUnits: 6
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1935 2067 0.25 1227 865 18 0 0 44 116 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%AI7_Thumbnail: 128 112 8
%%BeginData: 25878 Hex Bytes
%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45360E360D360E360D360E360D360E360D360E360E3614360E361436
%0E3614140E36141414361414143614141436141414361414143614141436
%1414143614141436141414361414143614141436141414371414143D1414
%143D1414143D1414143D141A143D141B143D141B143D141B143D141B143D
%141B143D141B143D141B140D140D0E0D140D140D140D140D140D140D140D
%140D140D140D140D140D140D140D140D140D140D140D140E140D140E140D
%1414140D1414140D1414140DFD38141A1414141A1414141B1414140D360D
%140D360E140D360E140D360E140D360E140D360E140D3614140D3614140D
%3614140E3614140E3614140EFD041436141414361414143614141436FD1F
%141A1414141B1414141B1414141B1414141B141A141B141B141B141B141B
%141B141B140D0E0D140D0E0D140D0E0D140D140D140D140D140D140D140D
%140D140D140D140D140D140D140D140D140D140D360D140D140D140D140D
%140E140D1414140D1414140D1414140D1414140DFD34141A360D360E360D
%360E360D360E360D360E360D360E360E3614360E3614360E3614140E3614
%141436141414361461846114141436141414361414143614141436141414
%36141414361414143614141436141414361414143D1414143D1414143D14
%14143D1414143D141B143D141B143D141B143D141B143D141B143D141B14
%3D140D0E0D140D0E0D140D140D140D140D140D140D140D140D140D140D14
%0D140D140D140D140D140D140D140D145AAFA8360D140D1414140D141414
%0D1414140E1414140EFD1014855AFD22141A1414141A1414141B360D140D
%360D140D360E140D360E140D360E140D360E140D360E140D3614140D3614
%140D3614140E3614140E85AFFF84FD04143614141436FD0514605AFD0414
%36FD0E1460FF60FD0E141B1414141B1414141B1414141B141A141B141B14
%1B141B141B141B140D140D0E0D140D0E0D140D0E0D140D140D140D140D14
%0D140D140D140D140D140D140D140D140D140D140D1436FFFFFF36140D14
%0D140D140D140E145A360DAF5A1460360D1414140D1414140DFD05140E60
%CFFF60FD151460855A3CFD1014360D360D360E360D360E360D360E360D36
%0E360D360E360D3614360E3614360E3614140E361414143614140E61FD04
%FF361414361414143614140E85FF6036FF60AF84FD041436141414361414
%1436141436FFFFFF84FD04143D1414143D1414143D1414143D141414FD05
%FF8585141B141B143D141B143D141B140D140D0E0D140D0E0D140D140D14
%0D140D140D140D140D140D140D140D140D140D140D140D140D140D140D14
%0D60FFFFFFAF14140D1414140D1436360DAFFF6060FFA9AF0DFD0E1436A8
%FFFFFF84FD131460FFFFFFCFFFFF85FD05141A1414141A1414140D360D14
%0D360D140D360D140D360E140D360E140D360E140D360E140D3614140D36
%14140D3614140E36141414FD04FFAF1414143614140E61FF6114FD06FF3C
%FD0F14AFFD04FF84FD0C141B1414141B141484FD06FF61141B141A141B14
%1B141B140D0D0D140D0E0D140D0E0D140D0E0D140D140D140D140D140D14
%0D140D140D140D140D140D140D140D140D140D1436FFFFFFCFA90D140D14
%0D140D85FFAF84FFFFFFA8FF84140D1414140D1414140DFD051436FFA8FF
%CFFF84FD13145AFFCFFFA8FFA83C3661FD0814360D360D360D360E360D36
%0E360D360E360D360E360D360E360D3614360E3614360E3614140E361414
%143614140E36A9FD04FFAFFD05148536AFFD08FF36FD0414361414143614
%1414361414A9FD05FFA93D14151414143D1414143D1414143D141A141560
%FD05FFAFFFFF85143D141B143D140D0E0D140D0E0D140D0E0D140D140D14
%0D140D140D0E0D140D140D140D140D140D140D140D140D140D140D140D14
%0D60FFFFA8FFFFA90D140E1436FFA9FFA8FFFFFFA8FFFF850DFD0E1460FD
%04FFA8FFFF85FD121460FFA8FFA8FFA83D1414141A1414141A360D140D36
%0D140D360D140D360D140D360E140D1436360D140E140D360E140D361414
%0D3614140D3614140E36141414AFFD06FF3614146184FD0AFF3C0E36FD0D
%14AFFD07FF85FD09141B1414141BFD041460FFCBFFA93D141B141A141B14
%1B140D0E0D0D0D140D0E0D140D0E0D140D0E0D140D140D60FFA9350E0D14
%0D140D140D140D140D140D140D140D140D140D1436FFFFFFA8FFFFFF5A14
%5AFFA8FFFFFFA8FFFFFFA8FFA8140D1414140D1414140DFD0614FFCAFFA8
%FFA8FFCF60FD10145AAFCAFF5AFD0B14360D360D360D140D360E360D360E
%360D360E360D360EA9FFFF84140D3614360E3614360E3614140E3614140E
%361414143684FD07FFA960A8FD0BFF84FD04143614141436141414361414
%84FD07FFA93D1414143D1414143D1414143D141460FF8485601B141B143D
%141B143D141B140D140D0D0D360D0D0D140D0E0D140D140D140D140D0E0D
%A9FFFF84360D140D140D140D140D140D140D140D140D140D140D5AFFFFA8
%FFFFFFCAFFFFFFCAFFFFFFA8FFFFFFA8FFFFFF36FD0E143CCAFFFFFFA8FF
%FFFFFD0F14855AFD0C141A1414140D360D1484FF5A360D140D140D360D14
%0D360EA984360DAFFFFFFF5A0D140E140D3614140D3614140D3614140E36
%14140E85FD15FF850E36FD0D14FD08FF61FD09141B1414143D3614141B14
%14141B141A141B141A141B14FD050D1484FFA85A0D0E0D0E0D140D0E0D0E
%5AFFA8600DA9CAFFFF5A0D140D140D140D140D140D140D140D140D140D14
%0DFFFFFFA8FFCBFFA8FFCAFFA8FFCAFFA8FFCAFFA8FF84140D140E140D14
%14140D1414140D60CFFFA8FFA8FFA8FF60FD1F14360D8584600D145AFFFF
%AF36140D360E360D360E1484FFFFAFA8FD04FF850E140E3614360E361414
%0E3614140E36FD041436AFFD13FF851414143C36361414143614141436AF
%FD09FF1414143636611414143D1414143D141A143D141B143D141B143D14
%1B143D140D0D0DA9FFFF843635A9FFFF84360D140D140D360D0E84FFFFFF
%A8FD04FF850D140D140D140D140D140D140D140D140D140D1436FFCAFFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FF84140E85FFFF84FD071436FFCAFFA8
%FFCAFFA8FFCAA98485A8FFCA85FD17141A360D0D0D3684FFFFAF5AA9FFFF
%FF600D140D1436FF605AA8FD08FFAF0E140D360E140D3614140D3614140E
%3614140E3684FD12FFAF14AFFD04FF36FD061461FD04FFCBFFFFFFCAFD07
%FFCF611414141B1414141B1414141B1414141B141A141B141A140D365A84
%2F1435AFFFFFA8FFA8FFFFA90D0E0D14A8FFA8AFA8FFCAFFA8FFCAFFCFA9
%0D0E0D140D140D140D140D140D140D140D140D14A8FFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFFA885FFFFA8FFA8850D1414140D145AFFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FF846036FD1714360D5AA9FFAF8584FD09FF5A140D60FD
%0DFFAF0E1414360E3614140E3614140E36141414361461FD16FFAF361436
%FD051485FD0EFF601414151414143D1414143D141A143D141B143D141B14
%3D141B140D0E0D0D5AFFFFFFA8FFFFFFA8FD05FFA8360D84FFFFA8FFFFFF
%A8FFFFFFA8FFFFAF0D140D140D140D140D140D140D140D140D140D36A8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD04FF850EFD05140E85CAFFA8FFA8
%FFA8FFA8FFA8FFCAFF5AFD1C140D143684A8FD0EFF600DFD0FFF14140E14
%0D3614140D3614140E3614140E141485FD14FF5AFD061485FD04FFA8FFFF
%FFA8FFFFFFCAAF36FD0A141B1414141B1414141B1414141B141A141B140D
%0D0D36FFFFA8FFFFFFA8FFFFFFA8FFCAFFA8FFFFFFA8FFCAFFA8FFCAFFA8
%FFCAFFA8FFFFAF0D140D140D140D140D140D140D140D140D140D5AA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCF5A0D1414140D36CAFFA8FFA8FFA8
%FFA8FFCAFFA8600EFD07140EFD1514360D360D36A9FD21FF14140E361436
%0E3614140E3614141436141414AFFD12FF36FD051484FFCBFD07FFA8AF60
%361437FD05143D608560856085603D143D1414143D141B143D141B143D14
%0D0D0D0E0D5AFD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FD04FFAF0D140D140D140D140D140D140D140D140D140D60FFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFA8360D14141436FFA8FFA8AF3660A885
%36FD091460FD0AFFAFA8AFFD0C14360D0E0D142FFD22FF850E140D141414
%0D3614140E3614140E3614141485FD10FFFD0514A9CFFFA83C141436FF84
%FD08143660FD0FFF1414141B1414141B141414FD070DFFCAFFCAFFA8FFCA
%FFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA83684840D
%140D140D140D140D140D140D140D140D85CAFFA8FFA8FFA8FFA8FFA8FFA8
%FF841414140D14A8FF5A140E140DA9A8600DFD081485FFFFA8FFFFFFA8FF
%CAFFA8FFCAFFA8FD0B14360D360D360D0E5AFD21FF84AFFF850E140E3614
%140E3614141436FD051485A8FD0CFF61FD041460AF36FD04143614141436
%14141436FD041436AFAFFFAFFD0AFF851414143D141B143D141B14FD050D
%0E0D0D5AFFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFA8FFFF600D140D140D140D140D140D140D140D140D1414
%FFFFFFA8FFCAFFA8FFFFA90D1414140D6036FD171436A9CFFFFFFFA8FFFF
%FFFD0C142F0D360D0E0D360D36A8FD23FFA8140E140D3614140D3614140E
%3614140E140E85FD04FFCBFD05FF36141436FD1C1484FD08FFAFA8FF8414
%141B1414141B14FD090D84FFFFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFF0D140D140D140D140D140D140D
%140D140D36CAFFA8FFA8FFA8FFCAFF36140E140D1414140D1414140D1414
%140D1414140DFD0B140E60CAFFA8FFA8FFA8FFCFFFA88536FD0714360D36
%0D360D360D140DA9FD23FF360E360E3614140E361414143614360E36A9FD
%09FF60FD0414361414143614141436141414361414143614141436FD0514
%85A8AFA9FD09FF843D1414143D141B143D14FD070D0E0D0D0DA9FFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCBFFA8FFFFFF
%0D140D140D140D140D140D140D140D1484FFA8FFA8FFA8FFA8FFA8140D14
%14140D1414140DFD1414AFFFFFCAFFCAFFA8FFFFFFCAFF60FD0B14360D2F
%0D360D0E0D360D0D84FD21FFA9360D3614140D3614140D3614140D1484FF
%CAFFFFFFA8FFFFFFCA60141414361414143614141436FD111461FD04FFCB
%FFFFFFA8AFA985FD05141B1414141B141414FD0B0D36A8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF0D140D14
%0D140D140D140D140D3684FFA8FFA8FFA8FFA8FFA85A0D140D140D140E14
%0D140E140D1414140D1414140D1414140D141414131484FFCAFFCAFF8485
%A83CFD1014360D360D360D360D360D360D36A9FD20FF360D3614360E140E
%14146060AFFD0AFFA9AF36FD041436141414361414143614141436141414
%3614141436141414361461A8AF8485363D143614151414143D1414143D14
%14143D141B14FD0D0DA9FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%CBFFA8FFCAFFA8FFCAFFCAFF0D140D140D365A8584AFCAFFCAFFA8FFCAA9
%84AF84A9A83636FF361414140D1414140D1414140D1414140EFD27142F0D
%360D2F0D360D0E0D360D0E5AFD1FFFA8360E140D1436FD05FFA8FFFFFFA8
%60FD04145AFF8485FF360E36141414361414143614141436FD23141B1414
%141B14FD0E0D35FFCFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFCF840D140D140D14A8FFA8FFA8FFA8FFCA5A0D140D140D5A
%845A5A600D140D140D140D140E140D140E140D1414140D1414140D141414
%0DFD1D142F0D360D350D360D360D360D360D145AFD1DFF84140E360E3614
%AFFD04FFCAFFA8600E36FD04143685143614141436141414361414143614
%14143614141436FD07143D1414143614141436141414371414143D141414
%3D1414143D1414143D14FD0F0D0EA8FFA8FFFFFFA8FFCBFFA8FFCBFFA8FF
%CAFFA8FFCAFFA8FFCAFFA8FFFF840D140D140D1436A9A8FFCAFF5A140D14
%0D140D140D360D140D140E140D1414140D1414140D1414140D140E140D14
%1414368584AFA8AF84FD1B142F0D2F0D360D2F0D360D2F0D360D0E0DFD13
%FFCBFFFFFFCBFFFFFFCBFF84140D360E140D145AFFCAAF36140D3614140E
%3614140E3614140E361414143614141436FD06143685848584AFAFFD07FF
%85141436FD13141B141414FD100D84FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFCAA90D140D140D140D1436360D140D140D14
%0D140D140D140D140D140D140D140D140D140D140D36366084FFCFFFFFFF
%CFFFFFFFA8FFFFFFA8FF36140EFD1714350D2F0D360D2F0D360D360D360D
%360D84FD1CFFA9360D3614360E3614140D3614140E3614140E3614141436
%1414143614141436FD04143685AFFD13FF36FD041436141414371414143D
%1414143D1414143D141414FD110D84FFFFA8FFCAFFA8FFCAFFA8FFCAFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FF36140D140D140D140D140D140D140D140D
%140D140D140D140E140D140E140D140D145AFFFFFFCAFFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8AF60603636FD16142F0D2F0D2F0D360D2F0D360D2F0D
%360D0D2FFD0BFFCBFFFFFFCBFFFFFFCAFFFFFFCAFFFFFFA8360E140D140E
%140D140E140D3614140D3614140E3614140E3614140E3614140D60A9FD1A
%FFAF5AFD12141B14FD120D84FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FF0D0E0D0E0D3636605A8436140D140D140D140D140D
%140D140D140D140D140D84CAFFFFFFA8FFFFFFA8FFFFFFA8FFCAFFA8FFCB
%FFA8FFCBFFA8FFCFFFCFFF846014140EFD0F142F0D350D2F0D360D2F0D36
%0D360D360D360D84FD1BFFA95A5A5AA9A9FD05FF843614140E3614140E36
%14141436FD0514AFFD22FF85855AFD04143D1414143D1414143D14FD130D
%FFFFFFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFCA
%FFCAFFA8FFA8FFCAFF5A140D140D140D140D140D140D140E140DAFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFCAFFFFFF8436FD0C142F0D2F0D2F0D2F0D350D2F0D360D2F0D360D0D5A
%FFFFFFCBFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFA8FFFFFFA8FFFFFFCAFFFF
%FFA8FFFFFFA8FFFFAF0E1414140D3614140E3614140E141485FD28FFA861
%FD0B140CFD120D2FA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAA90D140D140D140D140D140D14
%0D60FFFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFCA8514140EFD0714350D2F0D350D2F0D
%360D2F0D360D360D360D360D84FD12FFCBFFFFFFCBFFFFFFCAFFFFFFCAFD
%05FFA9AFA8FF14140E3614140E3614140E14A9FD2DFF8461FD07140D2FFD
%130DA9FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFCAA936360D1436360D140D140D140D140D0E5AFFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFCAAF6085A8FF84855A3C14142F0D2F0D2F0D2F0D2F0D35
%0D2F0D360D2F0D360D0D0DAFFFFFCAFFFFFFCAFFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFCBFFCFA90E140D140E140D3614140D3614140D14
%36FD2FFF6014368584611414140D0D0CFD140DA9CAFFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCA840D140D140D140D140D14
%0D140D140D145AFFCFFFCAFFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8AFA8FFA8FFA8FFA8FFA8FFA8FFA8FF84360DFD
%05142F0D2F0D2F0D350D2F0D360D2F0D360D360D360D0D0D5A84FD05FFCB
%FFFFFFCBFFFFFFCBFFFFFFCAFFFFFFCAFFFFFFA8FFFFA90D140E360E3614
%360E3614360E36141484FD05FF5A36A8FD1BFFA8AFFD0AFFAF8584FFFFAF
%3614143D140D0D0D2FFD100D5AA9CAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFCAA90D0E0D140D140D140D140D140D140D14
%84FFA8FFFFA913140D84CFFFCAFFA8FFCAFFA8FFCAFFA8FFCAFFA8FFCAFF
%A8FFCAFFA8FFCAFF84AFFFFFA8FFCAFFA8FFA8FFA83C146084A936141414
%2F0D2F0D2F0D2F0D2F0D2F0D0D2F360D360D5A84FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCBFFA8FFFF850D140E140D360E140D
%360E140D360E1484FD05FF36140E143685CBFFFFFFCBFFFFFFCBFFFFFFCB
%FFFFFFCBFFFFFFCBFFFFFFCBFFFFFF8485FFFFCAFD04FFAF84FFFF851414
%143C141414060D0D0D0CFD070D35FFA8A9A8AFCAFFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA85A0D0E0D140D140D140D
%140D140D140D145AFFA8FFA8FF5A140D140D140D8484FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF8460A8FFA8FFA8FFCA8514
%84A8AF36FD05142F0D2F0D2F0D2F0D350D0D2FFD07FFCBFFFFFFCBFFFFFF
%CBFFFFFFCAFFFFFFCAFFFFFFCAFFFFFFCAFFFFFF84360D140D360E360D36
%0E360E3614360D3684FD05FF84361414143614140E85FD1CFF843CA8FFFF
%FF84AFFF8514363661143D1414140C2F0D0D0D2FFD040D2FA9CAFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFFA88435
%0E0D140D140D140D140D140D140D140D36A8FFA8AFA88414140D140D140D
%140D140D60A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FF84145AFFCFFF5A85CAA9FD08142F0D2F0D2F0D2F0D0D35FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFCBFFA8FFCBFFCFFF5A
%140D140E140D360E140D360E140D360E140D36A8A95A3636360D140E140D
%3614140E3614140E3684FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFA9A8FF84141485A9FF843D6036FD07140C0D060D0D0D0C0D0DA8
%CAFFA8FFA8FFA8FFA8FFCAFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCAFF
%A8840D0E0D0E0D140D0E0D140D140D140D140D140D140D140D0E0D140D14
%0D140D140D140D140D140D140D3636A9A8AFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FF8460A8FF84140D143660FD0A142F0D2F0D2F0D2F0D35
%CBFFFFFFCBFD05FF845A2F362F5A7EFD0BFFA8A95A360D140E360D360E36
%0D360E360D360E360D360E360E360E360E3614360E3614140E3614141436
%141414361414363C84FF84FFFFFFCAFFFFFFCAFFFFFFCAFFFFFFA8FFFFFF
%603DA8FF843614141436141414361414143D140D0D0C2F0D0D0C0D59FFA8
%FFCAFFCAFFA8842FFD070D5AFF5A84A884FD045A2F360D0E0D0E0D140D0E
%0D140D140D140D140D140D140D140D140D140D140D140D140D140D140D14
%0D140D140D140D140E140D365A1484FF5AA9CAFFA8FFA8FFCAFFA8FFCAFF
%A8AFCAFF141460FF60FD0D142F0D2F0D2F0D2F84FD05FFA88459360D0D0D
%360D2F0D5A5A5AA8AF84FF5A0E0D0E0D140D140D360D140D360D140D360E
%140D360E140D360E140D360E140D360E140D3614140D3614140D3614140E
%3614140E3614140E141436361436FF84FFA9FFCAAFFFFFA8AFFFFF3685FF
%AF1414143CFD0D14060D0C0D060D59FFCAA95935FD0C0D7EA835FFA8FFCA
%840D0E0D0D0D0E0D0E0D140D0E0D140D0E0D140D0E0D140D140D140D140D
%140D140D140D140D140D140D140D140D140D140D140D140D140D140D140D
%140D143614368436FF5A5ACAA90D84CA840D60A8360D1414140DFD0B142F
%0D2F0D2F35FFCB840D0D0D2F0D2F0D360D2F0D360D0D0D84FD06FF35140D
%360D360D360D360D360D360E360D360E360D360E360D360E360D360E360D
%3614360E3614360E3614140E3614141436141414361414143614141436FD
%0614363C143C3614143C3614143614361414143614141436141414361414
%140C2F0D0D06A8842F06FD0E0D5A7EAF845A59840D0D0D140D0D0D140D0E
%0D140D0E0D140D0E0D140D140D140D140D140D140D140D140D140D140D14
%0D140D140D140D140D140D140D140D140E140D140E140D1414140D141414
%0D140E140DFD17142F0D2F0D2F0D2F0D2F0D2F0D2F0D2F0D2F0D2F0D2F0D
%360D360D0E0D0D0D140D140D360D140D360D140D360D140D360D140D360E
%140D360E140D360E140D360E140D360E140D3614140D3614140D3614140E
%3614140E3614140E3614141436141414361414143614141436FD15140C0D
%060D0C0D060D0D0D0CFD180D0E0D0D0D0E0D0D0D140D0E0D140D0E0D140D
%0E0D140D140D140D140D140D140D140D140D140D140D140D140D140D140D
%140D140D140D140D140D140D140D140D140E140D140E140D1414140D1414
%140D1414140DFD09142F0D2F0D2F0D2F0D2F0D2F0D2F0D350D2F0D360D2F
%0D360D350D360D360D360D360D360D360D360D360D360D360D360E360D36
%0E360D360E360D360E360D360E360D3614360E3614360E3614140E361414
%143614141436141414361414143614141436141414361414143614141436
%14141436141414361414143614141436140C0D0C2F0D0D0C2F0D0D0D2FFD
%170D0E0D0D0D140D0E0D140D0E0D140D0E0D140D140D140D140D140D140D
%140D140D140D140D140D140D140D140D140D140D140D140D140E140D140E
%140D1414140D1414140D1414140D1414140EFD11142F0D2F0D2F0D2F0D2F
%0D2F0D2F0D2F0D2F0D2F0D2F0D2F0D360D2F0D360D300D360D140D360D14
%0D360D140D360D140D360D140D360D140D360E140D360E140D360E140D36
%0E140D3614140D3614140D3614140E3614140E3614140E36141414361414
%14361414143614141436FD1314060D0C0D060D0C0D060D0D0D0CFD1C0D0E
%0D0D0D140D0E0D140D0E0D140D0E0D140D140D140D140D140D140D140D14
%0D140D140D140D140D140D140D140D140D140D140D140D140D140D140D14
%0E140D140E140D1414140D1414140D1414140DFD07142F0D2F0D2F0D2F0D
%2F0D2F0D2F0D2F0D350D2F0D350D2F0D360D2F0D360D360D360D360D360D
%360D360D360D360D360D360E360D360E360D360E360D360E360D360E360D
%3614360E3614360E3614140E361414143614141436141414361414143614
%141436141414361414143614141436141414361414143614141436141414
%062F0C0D0C2F0D0D0C2F0D0D0D2F0D0D0D2FFD130D0E0D0D0D140D0E0D14
%0D0E0D140D0E0D140D140D140D140D140D140D140D140D140D140D140D14
%0D140D140D140D140D140D140D140E140D140E140D140E140D1414140D14
%14140D1414140EFD0F140D060D0C0D060D0D0D060D0D0D06FD140D0E0D0D
%0D0E0D0E0D0E0D0E0D0E0D0E0D140D0E0D140D0E0D140D140D140D140D14
%0D140D140D140D140E140D140E140D140E140D140E140D140E140D140E14
%0D1414140E1414140E1414140E1414140EFD0E14597E597E597E5984597E
%5984597E5984597E59845A7E59845A7E59845A8459845A845A845A845A84
%5A845A845A845A845A845A845A845A845A845A845A845A845A845A845A84
%5A845A845A845A845A845A845A845A845A845A845A845A845A845A845A84
%5A845A845A845A845A845A845A845A845A845A845A845A845A845A85FD80
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8FFA8A852A8FFFFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A852FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FF7DFFFFFF
%A87D27A8FD04FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFF7D27A8FFA8FD07FFA8FFFFFFA8FD04FFA852FD05FFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FF7D5227A8FF
%A82727277DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFFFA82752FFFFA8FFA8A8A8FFA8FFA8FFA8FFA8FFA8FFA82752FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFFFA87D2727277D7D522752277DA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFF5227A8FFFFA87D527D7DFFFFFFA8FFFFFFA8FFFFFF
%52277DFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFA8FF52272727F852FD052752A8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8A87DA87DFFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF7D2727A8FF7D2727277DA8FFA8FFA8
%FFA8FFA8FFA852F8277DFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FD04FF5227275227522752275227527DFD05FFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FD07FFA8FFFFFFA8FD05FF5227275227527D
%A8A8FD05FFA8FFFFFFA8FFFFA8272752FF5252272752FFFFFFA8FFFFFFA8
%FFFFFF7D2727277DFFFFFFA8FFFFFFA8FFFFFFA8FD0FFFA8FFFFA8FFFFA8
%FD0C27A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFFFA8A87D527DFFFFFFA8
%FFA8FFA8FFA8FFA87DFD08277DFFA8FFA8FFA8FFA8FFA8FFA85227275252
%FD0427A8FFA8FFA8FFA8FFA8FFA8A8FD042752FFA8FFA8FFA8FFA8FFA8FF
%A8A87D7D52522752527D5252A8FFA8FFA8FD05FF7D272727522727275227
%2727A8FFFFA8FFFFFFA8FFFFFFA8FD04FFA87D52272727527DA8FD06FFA8
%FFFFFFA85227522752FD04277DFFA8FFFFFFA8FFFFFFA8FF7DFD06275227
%7DFD04FFA8FFFFFFA8FFFF7D275227277DFFFFFFA8FFFFFFA8FFA87DFD0B
%2752A8FFFFFFA8A8FFA8FFA852FD0A277DFFA8FFA8FFA8FFA8FFA8FFA8FF
%7D52FD092752527D7DFFA8FFA8FFA8FF7DFD082752A8FFA8FFA8FFA8FFA8
%FFA8FFFD0927FFA8FFA8FFA8FFA8FFA8FFA852FD0427A8FFA8FFA8FFA8FF
%A87DFD0D27FFA8FFA8FD04FFA8FFA852275227522752275227FFFFFFA8FF
%FFFFA8FD05FF7D52275227522752275227522727275252A87DFFFFFFA8FF
%A852275227522752277DFFFFA8FD05FFA8FFFF7D275227522752277DFD04
%FFA8FFFFFFA8FFFFFF5252275227A8FFFFA8FFFFFFA8FFA852FD05275227
%522752277DFD04FFA8A8FFA8FFA8FF7DFD09277DFFFFFFA8FFA8FFA8FFA8
%FF7DFD1127527DA8FFA8FFA8FFFF7DFD07277D5252277DA8FFA8FFA8FFA8
%52FD0627525227A8FFFFA8FFA8FFA8FF7DFD05277DFFFFFFA8FFA8FFA8FF
%A8A87DA87DFD0727527D52A8A8FFFFA8FD04FFA8272727522727275227A8
%FFA8A8FFA8FFFFFFA8FFA827275227272752272727522727275227272752
%7DFFA8FFFFFFA8FFFF7D275227272752272727527DFFA8FFFFFFA8FFA827
%27522727275227527DFFFFFFA8FFFFFFA8522727275227527DA87DA8FD04
%FFA8FD05FF2727275227272752272752FFFFA8FFA8FFA8FFA87DFD092752
%272752FFA8FFA8FFFF7DF8FD112752A8A8FFA8FFA8FFA8FFFF52F8FD0627
%7DA8FFA8FFA8FFA8FFA8FF52FD0727A8FFA8FFA8FFA8FFA8FFFD0827F827
%27FFA8FFA8FFA8FFA8A8A852FD0627F852A8FFA8FFFFA8FFFFFFA8FFA852
%275227522752FD0427527DA8FD04FFA82752522727522752275227522752
%2752527D52FFFFFFA8FFFFFFA8FFFFFFA87D27522752277DFD04FFA8FFFF
%FFA8FFFFFF52522752275252FD05FFA8FFFFFF525227522752275227527D
%A8A8FFFFFFA8FFA85227522752275227272752A8FFA8FFFFA8FFA8FFA8FF
%A8FF7DFD092752FFFFFFA8FFFFFF2727A8A852FD0C27527DFFA8FFA8FFA8
%FFA8FFA8FFA8FF7DFD04277DFFFFA8FFA8FFA8FFA8FFA8FFFFA8FD0427F8
%7DFFFFA8FFA8FFA8FF52FD0827527DFFFFFFA8FFA8FFA87DFD072752527D
%A8FFA8FFA8FD04FFA8FFFFFFA87D27272752FD042752FD07FF52277DFFFF
%FF7D52FD0927527DFFA8FFA8FFFFFFA8FD04FFA8FD042752A8FD04FFA8FF
%FFFFA8FD05FF522727522752A8FFFFFFA8FFFFFF7DFD042752275252A8FF
%FFA8FFFFFFA8FFFFA8FD052752527DA8FFFFFFA8FFFFFFA8A8FFA8FFA87D
%2727F8FD0627527DFFA8FFA8FFA8FF7D7DA8FFA8FFA8FFA8A8FD047D527D
%7DFD04A8FFA8FFA8FFA8FFA8FFA8FF272752A852A8FFFFA8FFA8FFA8FFA8
%A87DA87D7DFD0427F87DA8FFA8FFA8FFA8FFA827F87DA87D27A8A8FFA8FF
%A8FFA8FFA8FFA8FFA852275252A8A8FFA8FFA8FFA8FFA8FFA8FD05FFA827
%27277D7D522752527DA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FD0FFFA8
%FFFFFFA8FFFFFF7D52A8FD05FFA8FFFFFFA8FFFFFFA85227272752525227
%7DFFFFA8FFFFFFA8FFFFA852A8FFFF7D7DFD06FFA8FFFFFFA8FFFFFFA8FD
%07FFA8FFFFFFA8FFFFFFA8A8FFFFA827527DA8FFA82752A8FFFFFFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA87DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF2727277DA8FF52
%527DFFA8FFA8FFA8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFFFA8FF7DA8FD04FF7DA8A8
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%A87DFD05FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFA8FFA8FFFFFF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFFFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8
%FFFFFFA8FFFFFFA8FFFFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FD04FFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF
%FFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8A8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FF
%%EndData
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRider
currentpacking true setpacking
setpacking
%AI3_EndRider
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (Tracing) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe Symbolism) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
3 Bn
%AI5_BeginGradient: (New Gradient Swatch 1)
(New Gradient Swatch 1) 0 2 Bd
[
<
0E0D0C0C0B0A0A09090808080707060606050505050505050505050404040404040404040404
>
<
1211100F0E0D0B0A0A0A09080807080606050604040505040404040403030303030303030303
>
<
0A09090808070707060505050504040404040304040303030303030203030303030303030303
>
0.000031
<
EDEEEFEFF0F1F1F2F3F3F4F4F5F5F6F6F6F7F7F7F7F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9
>
<
E8E9EAEBECEDEEEFF0F0F1F2F2F3F3F4F4F5F5F6F6F6F6F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8
>
<
EBECEDEEEEEFF0F0F1F2F2F3F3F4F4F5F5F5F6F6F6F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8
>
4 %_Br
[
0.015259 0.012573 0.010224 0.000031 0.976471 0.972549 0.972549 2 70.1657 100 %_BS
%_0.015259 0.012573 0.010224 0.000031 0.976471 0.972549 0.972549 2 70.1657 100 Bs
0.056336 0.069245 0.038544 0.000031 0.929412 0.909804 0.921569 2 23.3918 0.584795 %_BS
%_0.056336 0.069245 0.038544 0.000031 0.929412 0.909804 0.921569 2 23.3918 0.584795 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 305)
(Unnamed gradient 305) 0 2 Bd
[
<
0E0D0D0C0B0A0A090909090808070706060605050505050505050404040404040404
>
<
1211100F0E0D0B0C0A0A080908080706060506060405050404040403030303030303
>
<
0A090909080708070606060505050405040403030404030303030203030303030303
>
0.000031
<
EDEEEEEFF0F1F1F2F2F3F3F4F4F5F5F6F6F6F7F7F7F8F8F8F8F8F9F9F9F9F9F9F9F9
>
<
E8E9EAEBECEDEEEEEFF0F1F1F2F2F3F4F4F5F5F5F6F6F6F7F7F7F7F8F8F8F8F8F8F8
>
<
EBECEDEDEEEFEFF0F1F1F2F2F3F3F4F4F5F5F6F6F6F6F7F7F7F7F8F8F8F8F8F8F8F8
>
4 %_Br
[
0.015259 0.012573 0.010224 0.000031 0.976471 0.972549 0.972549 2 70.1657 100 %_BS
%_0.015259 0.012573 0.010224 0.000031 0.976471 0.972549 0.972549 2 70.1657 100 Bs
0.056336 0.069245 0.038544 0.000031 0.929412 0.909804 0.921569 2 28.0702 0.584795 %_BS
%_0.056336 0.069245 0.038544 0.000031 0.929412 0.909804 0.921569 2 28.0702 0.584795 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 6)
(Unnamed gradient 6) 0 3 Bd
[
<
DBDADAD9D8D7D7D6D5D4D4D3D2D1D1D0D0CFCFCECDCDCCCBCAC9C8C8C7C7C6C5C4C4C3C3C2C2C1C1
C0BFBFBEBDBDBCBBBBBABA
>
<
7472706F6D6B6968666462605F5D5B5957565452504F4D4B4A46454342403E3D3B3938363433312F
2E2C2A2927252422201F1D
>
<
100F11100F0F10100F0E100F0F0E0F0F0E0E0F0F0E0E0F0E0D0E0F0E0E0F0E0E0D0F0E0E0D0F0E0D
0D0E0E0D0D0E0E0D0D0E0D
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000
>
<
09090909080808080808080707070707070706060606060606060505050505050504040404040404
0303030303030302020202
>
<
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091929495969798999A9B9C9D9E9FA0A1A2
A3A4A5A6A7A8A9AAABACAD
>
<
B6B7B7B8B9BABABBBCBDBDBEBFC0C0C1C2C3C3C4C5C6C6C7C8C9C9CACBCBCCCDCECECFD0D1D1D2D3
D4D4D5D6D7D7D8D9DADADB
>
4 %_Br
<
EDEDEDECEDECEBEBEBEBEBEAEAEAEAE9E8E8E8E8E7E6E6E6E6E5E4E4E3E4E3E2E2E1E1E0E0DFDFDF
DEDDDDDCDCDB
>
<
9A999A989997959694959392929191908E8E8D8D8B898A8989878686848583818280807E7C7D7B7B
797878767674
>
<
4544434240403F3D3D3B3A39373735343332312F2F2E2C2A28282725242222211F1E1C1C1B191816
151513121010
>
<
13131111100F0E0D0C0B0B0A09090808070706060505040403030302020202020101010101010101
000000000000
>
<
101010100F0F0F0F0F0F0E0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A
0A0A09090909
>
<
5F60606161626363646465666667676869696A6A6B6C6C6D6D6E6F6F707071727273737475757676
77787879797A
>
<
88898A8B8C8D8E8F909192939495969798999A9B9C9D9EA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0
B1B2B3B4B5B6
>
4 %_Br
[
0.727901 0.113191 0.052369 0.000031 0.007843 0.678431 0.858824 2 50 100 %_BS
%_0.727901 0.113191 0.052369 0.000031 0.007843 0.678431 0.858824 2 50 100 Bs
0.858762 0.45539 0.062104 0.000702 0.035294 0.478431 0.713726 2 50 28.655 %_BS
%_0.858762 0.45539 0.062104 0.000702 0.035294 0.478431 0.713726 2 50 28.655 Bs
0.930938 0.605493 0.270054 0.075898 0.062745 0.372549 0.533333 2 50 0 %_BS
%_0.930938 0.605493 0.270054 0.075898 0.062745 0.372549 0.533333 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_Begin_NonPrinting
Np
3 Bn
%AI5_BeginGradient: (New Gradient Swatch 2)
(New Gradient Swatch 2) 0 3 Bd
[
<
DBDADAD9D8D7D7D6D5D4D4D3D2D1D1D0D0CFCFCECDCDCCCBCAC9C8C8C7C7C6C5C4C4C3C3C2C2C1C1
C0BFBFBEBDBDBCBBBBBABA
>
<
7472706F6D6B6968666462605F5D5B5957565452504F4D4B4A46454342403E3D3B3938363433312F
2E2C2A2927252422201F1D
>
<
100F11100F0F10100F0E100F0F0E0F0F0E0E0F0F0E0E0F0E0D0E0F0E0E0F0E0E0D0F0E0E0D0F0E0D
0D0E0E0D0D0E0E0D0D0E0D
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000
>
<
09090909080808080808080707070707070706060606060606060505050505050504040404040404
0303030303030302020202
>
<
7A7B7C7D7E7F808182838485868788898A8B8C8D8E8F9091929495969798999A9B9C9D9E9FA0A1A2
A3A4A5A6A7A8A9AAABACAD
>
<
B6B7B7B8B9BABABBBCBDBDBEBFC0C0C1C2C3C3C4C5C6C6C7C8C9C9CACBCBCCCDCECECFD0D1D1D2D3
D4D4D5D6D7D7D8D9DADADB
>
4 %_Br
<
EDEDEDECEDECEBEBEBEBEBEAEAEAEAE9E8E8E8E8E7E6E6E6E6E5E4E4E3E4E3E2E2E1E1E0E0DFDFDF
DEDDDDDCDCDB
>
<
9A999A989997959694959392929191908E8E8D8D8B898A8989878686848583818280807E7C7D7B7B
797878767674
>
<
4544434240403F3D3D3B3A39373735343332312F2F2E2C2A28282725242222211F1E1C1C1B191816
151513121010
>
<
13131111100F0E0D0C0B0B0A09090808070706060505040403030302020202020101010101010101
000000000000
>
<
101010100F0F0F0F0F0F0E0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A
0A0A09090909
>
<
5F60606161626363646465666667676869696A6A6B6C6C6D6D6E6F6F707071727273737475757676
77787879797A
>
<
88898A8B8C8D8E8F909192939495969798999A9B9C9D9EA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0
B1B2B3B4B5B6
>
4 %_Br
[
0.727901 0.113191 0.052369 0.000031 0.007843 0.678431 0.858824 2 50 100 %_BS
%_0.727901 0.113191 0.052369 0.000031 0.007843 0.678431 0.858824 2 50 100 Bs
0.858762 0.45539 0.062104 0.000702 0.035294 0.478431 0.713726 2 50 46.1988 %_BS
%_0.858762 0.45539 0.062104 0.000702 0.035294 0.478431 0.713726 2 50 46.1988 Bs
0.930938 0.605493 0.270054 0.075898 0.062745 0.372549 0.533333 2 50 0 %_BS
%_0.930938 0.605493 0.270054 0.075898 0.062745 0.372549 0.533333 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 2)
(Unnamed gradient 2) 0 6 Bd
[
<
B4B3B3B3B2B2B1B1B0AFAFAEAEADACACABABAAAAAAA9A8A8A7A7A6A5A5A4A3A3A2A2A19F9F9E9D9C
9B9A99989796969594939291908F8F8D
>
<
3938373635343331302F2E2D2C2B2A29282725242322211F1E1C1B1A1716141312100F0D0C0A0907
06040302010000000000000000000000
>
<
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFEFDFBFAF9F7F6
>
<
100F0E0D0D0C0B0A0A09080707060605050404040303020202020101010101000000000000000000
00000000000000000000000000000000
>
<
5859595A5A5B5C5C5D5E5E5F5F606161626363646465666667676869696A6B6B6C6C6D6E6E6F6F70
7171727373747475767677787879797A
>
<
9192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACAEAFB0B1B2B3B4B5B6B7B8B9
BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9
>
<
303031313132323233333334343435353636363737373838383939393A3A3A3B3B3B3C3C3C3D3D3D
3E3E3F3F3F4040404141414242424343
>
4 %_Br
<
A5A6A6A7A8A8A8A9AAAAAAABACACADADAEAFAFB0B1B1B2B2B3B3B3B4
>
<
181A1B1C1E1F20222324252627292B2C2D2E2F303133343536373839
>
1
<
010101020202020303040404050506070708090A0A0B0C0D0D0E0F10
>
<
696868676666656564636362616160605F5E5E5D5C5C5B5B5A595958
>
<
ADACABAAA9A8A7A6A5A4A3A2A1A09E9D9C9B9A999897969594939291
>
<
3A3A3939393838373737363636353534343433333332323131313030
>
4 %_Br
<
2425262728292A2A2B2C2D2E2E2F3032323334353536373838393A3B3C3D3E3E3F40414142444545
46474748494A4A4B4C4C4D4E4E50515252545555565757585A5A5B5C5C5D5E5E5F60606162626364
646667676868696A6B6C6D6D6E6E6F7070717272737374757577777878797A7A7B7B7C7C7E7F7F80
808181828284858586868787888889898A8B8B8C8D8D8E8E8F8F9090919193939394949595969698
989899999A9A9B9B9B9C9C9C9D9D9F9F9FA0A0A0A1A1A1A2A2A2A3A3A3A3A3A3A3A3A4A4A4A4A4A5
A5A5A5
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000100000101020101020102020102020302020302030302
04030304030504040504040504040505060505060505060505060606070706080707080808090908
0909090A0A090A0A0A0B0B0B0C0C0B0B0C0C0C0D0D0D0E0E0D0D0E0E0E0E0F0F0F11111010121211
11131312121413131314141414141515151515161616161617171717171718181818171717191918
181818
>
<
3F40414344454648494A4C4D4E4F515253545657585A5B5B5C5D5E60616264656668696A6B6D6E70
6F717274757778797B7D7E7E80818385868889898B8D8E8F91929493959698999A9C9C9D9FA0A1A3
A2A4A5A6A8A8A9ABACADADAEB0B2B3B3B4B6B7B8B9BABBBDBDBEBFC1C1C2C4C5C5C6C7C8C8CACBCB
CCCECECFD0D2D2D3D4D4D6D7D7D8DADADBDCDDDEDFDFE0E0E2E3E4E5E5E7E9E9EAEBECEEEEF0F0F2
F2F4F4F6F8F8FAFAFCFCFDFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFF
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000001010101010101010101010101010101
010101
>
<
DBDAD9D9D8D7D6D6D5D4D3D2D2D1D0CFCFCECDCCCCCBCAC9C9C8C7C6C6C5C4C4C3C2C1C1C0BFBEBE
BDBCBCBBBAB9B9B8B7B7B6B5B5B4B3B2B2B1B0B0AFAEAEADACACABAAAAA9A8A8A7A6A6A5A4A4A3A2
A2A1A0A09F9F9E9D9D9C9B9B9A9A999898979696959594939392929191908F8F8E8E8D8D8C8B8B8A
8A898988888786868585848483838282818180807F7F7E7E7D7D7C7C7B7B7A7A7A79797878777776
76767575747473737372727271717070706F6F6F6E6E6E6D6D6D6C6C6C6C6B6B6B6B6A6A6A6A6A69
696969
>
<
F0F0EFEFEEEEEDEDECECEBEBEBEAEAE9E9E8E8E7E7E7E6E6E5E5E4E4E3E3E3E2E2E1E1E0E0E0DFDF
DEDEDEDDDDDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D5D4D4D3D3D3D2D2D1D1D1D0D0CFCFCF
CECECECDCDCCCCCCCBCBCBCACACAC9C9C8C8C8C7C7C7C6C6C6C5C5C5C4C4C4C3C3C3C2C2C2C1C1C1
C0C0C0BFBFBFBEBEBEBDBDBDBCBCBCBCBBBBBBBABABAB9B9B9B9B8B8B8B8B7B7B7B6B6B6B6B5B5B5
B5B4B4B4B4B3B3B3B3B2B2B2B2B2B1B1B1B1B1B0B0B0B0B0AFAFAFAFAFAFAEAEAEAEAEAEAEADADAD
ADADAD
>
<
CCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6
A6A5A4A3A2A1A09F9E9D9C9C9B9A99989796959594939291908F8E8E8D8C8B8A8988888786858483
838281807F7F7E7D7C7B7B7A797877777675747373727170706F6E6D6D6C6B6A6A69686767666565
646363626160605F5E5E5D5C5C5B5A5A595858575656555554535352525150504F4F4E4D4D4C4C4B
4B4A4A4948484747464645454444434343424241414040403F3F3E3E3E3D3D3D3C3C3C3B3B3B3B3A
3A3A3A
>
4 %_Br
<
8D8C8C8B8A8989888787868585848383828181817F7E7E7D7C7B7B7A797978777776747373727171
706F6F6E6D6D6C6B6A6A696868676666656464636161605F5F5E5D5C5B5A5A595858565555545353
525151504F4F4E4D4D4C4C4B4A4A49484746454544444342424140403F3E3D3C3C3B3A3A39393837
37363635343433333231312F2F2E2E2D2D2C2B2B2A2A29292828272626252424
>
0.000031
<
F6F5F3F1EFEEECEBE9E7E7E5E4E3E2E1E0DFDEDDDBDAD9D8D6D5D4D3D1D0CFCECCCBCAC8C7C6C5C3
C2C1C0C0BFBDBCBBBAB8B7B6B5B3B2B1AFAEADABAAA9A7A6A4A3A2A1A09E9D9B9A98979594929190
8E8D8D8B8A898786858382817F7E7E7C7B7978777574727171706E6D6B6A69676766646361615F5F
5E5D5C5A595958575554535351504F4D4D4C4B4A49484745464443414140403F
>
0.000031
<
7A7B7B7C7D7E7E7F80808182838384858586878788898A8A8B8C8C8D8E8E8F909091929393949595
9697979899999A9B9C9C9D9E9E9FA0A0A1A2A2A3A4A4A5A6A6A7A8A8A9AAAAABACACADAEAEAFB0B0
B1B2B2B3B4B4B5B6B6B7B7B8B9B9BABBBBBCBDBDBEBEBFC0C0C1C2C2C3C3C4C5C5C6C7C7C8C8C9CA
CACBCBCCCDCDCECECFD0D0D1D1D2D2D3D3D4D5D5D6D6D7D7D8D8D9D9DADADBDB
>
<
C9C9CACACACACBCBCBCCCCCCCCCDCDCDCECECECECFCFCFD0D0D0D0D1D1D1D1D2D2D2D3D3D3D3D4D4
D4D5D5D5D5D6D6D6D6D7D7D7D8D8D8D8D9D9D9D9DADADADBDBDBDBDCDCDCDCDDDDDDDEDEDEDEDFDF
DFDFE0E0E0E0E1E1E1E1E2E2E2E2E3E3E3E4E4E4E4E5E5E5E5E6E6E6E6E7E7E7E7E8E8E8E8E9E9E9
E9E9EAEAEAEAEBEBEBEBECECECECEDEDEDEDEDEEEEEEEEEEEFEFEFEFEFF0F0F0
>
<
434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A
6B6C6D6D6E6F707172737475767778797A7B7C7D7E7F80818283848485868788898A8B8C8D8E8F90
919292939495969798999A9B9C9D9D9E9FA0A1A2A3A4A5A6A6A7A8A9AAABACADADAEAFB0B1B2B3B3
B4B5B6B7B8B8B9BABBBCBDBDBEBFC0C1C1C2C3C4C4C5C6C7C7C8C9CACACBCBCC
>
4 %_Br
<
0F101011121313141515161717191A1A1C1D1E1E1F20202122222324242526272829292A2B2B2C2D
2D2E2F2F31313233333435353637373838393A3A3B3C3C3D3D3E4040414142434344444546464748
494A4A4B4B4C4C4D4E4E4F4F505051525253535454555556585859595A5A5B5B5C5D5E5E5F5F6061
616262646465656666676768686869696A6A6B6B6C6C6D6D6E6E6F6F707070717172727373737474
767677777778787979797A7A7B7B7B7C7C7D7D7E7E7E7E7F7F818181818181828283838383848484
858585858686868787878788888888898989898A8A8A8A8A8B8B8B8B8B8C8C8C8C8C8C8C8D8D8D8D
8D8D
>
0.000031
<
1A1C1D1E20212224252628292A2C2D2E303133343537383A3B3B3C3D3F404243444647484A4B4C4D
4F4F50515354555758595A5C5C5D5E5F60626364646667696A6B6D6E6E7071727475777778797B7C
7E7E7F81828383858687898A8A8B8D8E8E9091929494959798989A9B9D9E9EA0A1A2A3A4A6A6A7A8
AAAAABADAEAEAFB1B1B2B3B3B5B6B6B7B8B9BABBBCBCBDBDBFC0C0C1C2C2C3C5C5C6C7C7C8C8CACB
CBCCCCCECFCFD0D0D1D1D3D4D4D5D5D6D6D8D8D9D9DADADBDBDDDDDEDEDFDFE0E0E1E1E2E2E3E3E4
E4E5E5E5E7E7E7E7E7E9E9EAEBEBECECECEDEEEEEFEFEFEFF1F1F1F3F3F3F3F3F5F5F5F5F5F6F6F6
F6F6
>
0.000031
<
EEEDEDECEBEAEAE9E8E8E7E6E6E5E4E4E3E2E1E1E0DFDFDEDDDDDCDBDBDAD9D9D8D7D7D6D5D5D4D3
D3D2D1D1D0D0CFCECECDCCCCCBCACAC9C9C8C7C7C6C5C5C4C4C3C2C2C1C1C0BFBFBEBEBDBCBCBBBB
BAB9B9B8B8B7B7B6B5B5B4B4B3B3B2B1B1B0B0AFAFAEAEADACACABABAAAAA9A9A8A8A7A7A6A6A5A5
A4A3A3A2A2A1A1A0A09F9F9E9E9E9D9D9C9C9B9B9A9A999998989797969696959594949393939292
91919090908F8F8E8E8E8D8D8C8C8C8B8B8A8A8A8989898888878787868686858585848484838383
83828282818181808080807F7F7F7F7E7E7E7E7D7D7D7D7D7C7C7C7C7C7B7B7B7B7B7B7B7A7A7A7A
7A7A
>
<
F8F8F7F7F7F7F6F6F6F5F5F5F5F4F4F4F3F3F3F3F2F2F2F2F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDED
EDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3
E3E3E2E2E2E2E2E1E1E1E1E0E0E0E0DFDFDFDFDFDEDEDEDEDDDDDDDDDDDCDCDCDCDBDBDBDBDBDADA
DADADAD9D9D9D9D9D8D8D8D8D8D7D7D7D7D7D6D6D6D6D6D5D5D5D5D5D5D4D4D4D4D4D3D3D3D3D3D3
D2D2D2D2D2D2D1D1D1D1D1D1D0D0D0D0D0D0CFCFCFCFCFCFCFCECECECECECECECDCDCDCDCDCDCDCD
CCCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACACACACACAC9C9C9C9C9C9C9C9C9C9
C9C9
>
<
E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCFCECDCCCBCAC9C8C7C6C5C4C3C2C1
C0C0BFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A2A2A1A09F9E
9D9D9C9B9A999998979695949493929191908F8E8D8D8C8B8A8A898887868685848483828181807F
7E7E7D7C7B7B7A7979787777767575747372727170706F6F6E6D6D6C6B6B6A696968676766666564
64636362616160605F5F5E5D5D5C5C5B5B5A5A59595858575756565555545453535252515150504F
4F4F4E4E4D4D4D4C4C4B4B4B4A4A4949494848484747474746464645454545454444444444434343
4343
>
4 %_Br
[
0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 2 22.7273 100 %_BS
%_0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 2 22.7273 100 Bs
0.705653 0.222751 1 0.063722 0.345098 0.568627 0.188235 2 50 93.2584 %_BS
%_0.705653 0.222751 1 0.063722 0.345098 0.568627 0.188235 2 50 93.2584 Bs
0.647303 0.095888 1 0.003754 0.411765 0.678431 0.227451 2 50 62.3595 %_BS
%_0.647303 0.095888 1 0.003754 0.411765 0.678431 0.227451 2 50 62.3595 Bs
0.142428 0.000031 0.246067 0.000031 0.858824 0.941176 0.8 2 39.3939 34.8315 %_BS
%_0.142428 0.000031 0.246067 0.000031 0.858824 0.941176 0.8 2 39.3939 34.8315 Bs
0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 2 46.5116 10.6742 %_BS
%_0.55407 0.000031 0.965515 0.000031 0.478431 0.788235 0.262745 2 46.5116 10.6742 Bs
0.057465 0.000031 0.103578 0.000031 0.933333 0.972549 0.905882 2 37.5 2.24719 %_BS
%_0.057465 0.000031 0.103578 0.000031 0.933333 0.972549 0.905882 2 37.5 2.24719 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (Unnamed gradient 3)
(Unnamed gradient 3) 0 2 Bd
[
<
00000001020304050506070809090A0B0C0D0F101112131415161718191A1B1C1C1D1E1F20212324
252627292A2B2C2D2E2F3031333435363738393B3C3D3E3F40414344454647484A4B4C4D4E4F5052
5354555657595A5B5D5E6061626364656768696A6B6C6D6E6F70707172737475767778797A7B7C7D
7E7F808182828384848586878889898A8B8C8D8E8F8F909192929394959596979898999A9B9B9C9C
9D9E9E9F9FA0A0A1A2A2A3A3A4A4A5A5A6A6A7A7A8A8A9A9A9AAAAABABABACACADADAEAEAEAFAFB0
B0B0B1B1B1B1B2B2B2B3B3B3B4B4B4B5B5B5B6B6B6B7B7B7B8B8B8B9B9B9B9B9BABABABABABBBBBB
BCBCBCBCBDBDBDBDBEBEBEBEBFBFBFBF
>
<
00000000010202030304040506060708090A0A0B0C0D0D0E0F1010111213141415161718191A1B1B
1C1D1E1F20202122232425262728292A2B2C2D2E2F30313233343535363738393A3B3C3D3E3F4041
424344454647484A4B4C4D4E4F505153535455565758595A5B5B5C5D5E5F60616162636465666768
696A6A6B6C6C6D6E6F6F70717273747576777778797A7A7B7C7D7E7E7F8081818283838485868687
8889898A8B8B8C8D8D8E8F8F90909192929394959596979797989899999A9A9B9B9C9C9D9D9E9E9F
9FA0A0A1A1A1A2A2A3A3A3A4A4A4A5A5A6A6A6A7A7A7A8A8A8A9A9A9AAAAAAAAAAABABABABABABAB
ACACACACACACACACADADADADADADADAD
>
<
00000000010202030304040506060708090A0B0B0C0D0E0F1011121213141516171718191A1B1C1C
1D1E1F20212122232425262829292A2B2C2D2E2F30313233343536373838393A3B3C3D3E3F404142
4344454647484A4B4C4E4F50515253545555565758595A5B5C5D5D5E5F6061626364646566676768
696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7F7F808181828384848585
8687878888898A8B8B8C8D8E8E8F8F909091919192929393949595969697979899999A9A9B9B9C9D
9D9D9E9E9E9F9FA0A0A0A1A1A2A2A2A3A3A3A4A4A4A5A5A5A5A5A6A6A6A6A6A7A7A7A7A7A7A8A8A8
A8A8A9A9A9A9A9AAAAAAAAAAAAABABAB
>
<
00000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000101010101010202020203030303040405050606070708090A0A0B0C
0D0E0F10101112131415161718191A1B1C1D1E202122242527282A2B2C2E2F313233353638393B3D
3E4041434546484A4C4D4F51535456585A5C5D5F61636567696B6D6F71737577797C7E8083858789
8C8E90939597999C9EA0A2A4A6A9ABADAFB1B3B5B7B9BBBDBEC0C2C4C6C7C9CACBCCCDCED0D1D3D4
D5D7D8D9DADBDCDDDEDFE0E2E3E4E5E6
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
4 %_Br
[
0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 %_BS
%_0.75021 0.679683 0.670222 0.90164 0 0 0 2 50 100 Bs
0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 %_BS
%_0.000031 0.000031 0.000031 0.000031 1 1 1 2 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-3818.5 4618.4351 m
-3604.8999 4618.4351 L
-3604.8999 4610.6343 L
-3818.5 4610.6343 L
-3818.5 4618.4351 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-3818.5 4614.5352 m
-3808.4856 4617.0269 -3801.6863 4618.375 -3789.7007 4618.4351 c
-3776.7185 4618.5 -3711.6997 4618.4351 y
-3646.6816 4618.5 -3633.6997 4618.4351 v
-3621.7124 4618.375 -3614.9136 4617.0269 -3604.8999 4614.5352 C
-3614.9136 4612.0435 -3621.7124 4610.6953 -3633.6997 4610.6343 c
-3646.6816 4610.5688 -3711.6997 4610.6343 y
-3776.7185 4610.5688 -3789.7007 4610.6343 v
-3801.6863 4610.6953 -3808.4856 4612.0435 -3818.5 4614.5352 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 2)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7690.8833 8490.9551 m
-7599.0479 8490.9551 L
-7599.0479 8486.6758 L
-7690.8833 8486.6758 L
-7690.8833 8490.9551 L
n
0 O
0.697627 0.675227 0.638575 0.739559 0.137255 0.121569 0.12549 Xa
-7690.6631 8488.2754 m
-7691 8488.3418 -7690.4814 8488.5313 -7690.8833 8488.3887 C
-7690.8379 8488.2705 -7690.7725 8488.1816 -7690.6631 8488.2754 C
f
-7600.1675 8488.4414 m
-7601.2524 8489.2041 -7602.6816 8488.4336 -7603.8701 8488.9199 C
-7604.0098 8488.9521 -7603.8345 8488.502 -7604.1484 8488.6025 C
-7605.3008 8489.1953 -7607.1162 8488.8418 -7608.5195 8488.3848 C
-7608.4346 8488.2666 L
-7608.7017 8488.1816 -7609.0283 8488.5723 -7609.3115 8488.5176 C
-7609.3135 8488.4395 -7609.2207 8488.4063 -7609.2861 8488.2979 C
-7609.3574 8488.5352 -7609.7983 8488.4082 -7609.9185 8488.584 C
-7610.0303 8488.4922 -7610.0195 8488.3047 -7610.1641 8488.2002 C
-7610.3262 8488.4697 L
-7610.7769 8489.1094 -7611.4209 8488.4258 -7612.0361 8488.7559 C
-7612.0063 8488.6934 -7611.9453 8488.6445 -7611.9941 8488.584 C
-7612.9814 8488.9727 -7614.2168 8488.8994 -7615.3208 8489.043 C
-7615.2769 8488.9482 -7615.2363 8488.7754 -7615.3008 8488.668 C
-7615.3555 8488.9512 -7615.6963 8489.0225 -7615.9922 8489.0781 C
-7616.1255 8488.7871 -7616.4995 8489.3438 -7616.8467 8489.1826 C
-7616.8169 8489.1191 L
-7617.0732 8489.4238 -7617.1973 8488.9434 -7617.4053 8489.3086 C
-7617.5684 8489.0801 L
-7617.6807 8489.4902 -7617.9395 8488.8672 -7618.1514 8489.0762 C
-7618.1445 8489.1602 L
-7618.3442 8489.2598 -7618.4482 8489.0537 -7618.6338 8489.123 C
-7618.6514 8489.0762 L
-7619.0854 8489.1826 -7619.3379 8488.9551 -7619.3271 8489.2754 C
-7619.4795 8489.0186 -7618.9063 8489.1582 -7619.1455 8488.7842 C
-7620.5732 8489.1152 -7622.0459 8489.0498 -7623.4834 8489.0566 C
-7623.6465 8488.9277 -7623.7505 8488.8887 -7623.7871 8488.7666 C
-7623.9307 8488.832 -7624.3281 8488.8262 -7624.4585 8488.9902 C
-7624.4102 8488.9834 -7624.5513 8488.8262 -7624.6274 8488.8105 C
-7624.8887 8488.6895 -7624.9131 8489.1621 -7625.2002 8489.0186 C
-7625.0859 8488.9336 -7625.0469 8488.8301 -7625.0854 8488.7109 C
-7625.3301 8488.9609 -7625.6577 8488.9209 -7625.9473 8489.002 C
-7625.9023 8488.9482 -7625.8325 8488.916 -7625.8433 8488.8154 C
-7626.1602 8489.0986 -7626.4209 8488.7559 -7626.6982 8488.9346 C
-7626.5947 8488.75 L
-7627.0415 8488.5254 -7626.7266 8489.1367 -7627.1128 8489.0039 C
-7627.02 8488.9453 -7627.0527 8488.873 -7627.0361 8488.7979 C
-7627.3965 8489.1338 -7627.9795 8489.0225 -7628.3389 8489.1367 C
-7628.3174 8489.1113 -7628.3232 8489.0605 Y
-7628.7148 8489.1025 -7629.1245 8488.998 -7629.5552 8489.1445 C
-7629.7119 8489.0625 -7629.5039 8488.6934 -7629.9185 8488.7617 C
-7629.9033 8489.1328 -7630.6221 8488.9141 -7630.3779 8489.334 C
-7630.7319 8489.2734 -7631.2925 8489.1338 -7631.5283 8489.2598 C
-7631.3691 8489.1191 -7631.7007 8488.8066 -7631.4063 8488.7754 C
-7631.6289 8488.5498 L
-7631.5957 8488.3984 -7631.3999 8488.6016 -7631.4707 8488.4102 C
-7631.6182 8488.4258 -7632.0479 8488.5723 -7632.1797 8488.5117 C
-7632.4531 8488.7393 -7632.7041 8489.1641 -7633.1465 8489.2109 C
-7632.9385 8489.0664 -7633.2646 8488.8018 -7633.1235 8488.7383 C
-7633.7407 8489.4482 L
-7633.8877 8489.4658 -7633.7725 8489.1563 -7633.9854 8489.2529 C
-7633.9746 8489.3506 -7634.0674 8489.4121 -7634.1318 8489.4922 C
-7634.1875 8489.4482 -7634.7441 8489.584 -7634.8081 8489.2178 C
-7634.8735 8489.0762 -7634.5684 8489.1426 -7634.7314 8489.0117 C
-7635.0029 8489.0146 -7635.0151 8489.1406 -7635.2871 8489.1465 C
-7635.2925 8489.0977 L
-7635.4717 8489.043 -7635.8213 8489.2529 -7635.6265 8489.4551 C
-7635.5015 8489.4658 -7635.6738 8489.2354 -7635.4888 8489.3418 C
-7635.6152 8489.5537 -7635.9312 8489.6133 -7636.2031 8489.6162 C
-7636.1104 8489.5586 -7636.1216 8489.4609 -7636.0845 8489.3574 C
-7636.4497 8489.6445 -7636.8369 8489.7354 -7637.2451 8489.8555 C
-7637.2515 8490.0293 -7637.0928 8489.5391 -7637.0327 8489.6309 C
-7637.5557 8489.3896 -7638.1128 8489.9727 -7638.5479 8489.6201 C
-7638.4766 8489.5898 -7638.5098 8489.8672 -7638.5146 8489.8184 C
-7638.7666 8489.7969 -7638.7549 8489.5449 -7638.9189 8489.6377 C
-7638.9355 8489.4902 -7639.1255 8489.6855 -7639.2944 8489.7305 C
-7639.3818 8489.8369 -7639.3384 8489.6582 -7639.1914 8489.6426 C
-7639.4268 8489.7666 -7640.3691 8489.9941 -7640.9131 8489.7793 C
-7640.9023 8489.877 -7641.2471 8490.1377 -7641.3721 8490.127 C
-7641.3232 8489.8984 L
-7641.4375 8489.7617 -7641.7422 8489.918 -7641.7632 8489.7227 C
-7642.0303 8490 -7640.7344 8489.4863 -7641.0957 8489.7002 C
-7641.1895 8489.5098 -7641.5991 8490.0645 -7641.5215 8489.7529 C
-7641.7725 8489.7617 -7642.0161 8490.0186 -7642.2559 8489.8047 C
-7642.1865 8489.8418 -7642.0522 8489.4873 -7642.2549 8489.5039 C
-7642.6123 8489.5449 -7642.3564 8489.6133 -7642.6465 8489.6895 C
-7642.8281 8489.7832 L
-7642.8398 8490.0059 -7643.1475 8489.7529 -7643.0146 8490.002 C
-7643.0586 8489.8184 -7643.5337 8490.1152 -7643.4971 8489.7461 C
-7643.4473 8489.4551 L
-7643.6016 8489.4766 -7643.7002 8489.7617 -7643.8213 8489.8896 C
-7643.8418 8489.8633 -7643.8823 8489.8047 -7643.8745 8489.7578 C
-7643.8994 8490.2031 -7644.2432 8489.7207 -7644.4268 8490.0645 C
-7644.7505 8489.9102 -7645.2495 8490.0498 -7645.4023 8489.7734 C
-7645.6514 8489.9082 -7645.8784 8490.0674 -7646.1621 8489.9727 C
-7646.1055 8489.9307 -7646.0283 8489.918 -7646.0122 8489.8223 C
-7646.1904 8489.6914 -7646.2344 8489.8086 -7646.3975 8489.8809 C
-7646.3608 8489.8145 -7646.7539 8489.6201 -7646.9521 8489.4629 C
-7647.1992 8489.5957 -7647.1143 8489.8359 -7647.1392 8489.9824 C
-7647.3652 8489.543 -7647.8379 8490.2656 -7648.1211 8489.8672 C
-7648.0352 8489.8066 -7647.7598 8489.6514 -7647.9658 8489.541 C
-7648.1919 8489.1025 -7648.4219 8489.8643 -7648.7861 8489.6543 C
-7648.6968 8490.0186 L
-7648.8594 8489.793 -7649.2334 8490.2305 -7649.1963 8489.8594 C
-7649.3184 8489.9902 -7649.6265 8489.7383 -7649.5859 8490.0938 C
-7650.1846 8489.793 -7651.0425 8490.2754 -7651.4102 8489.6377 C
-7651.4961 8489.6973 -7651.7104 8489.6367 -7651.6665 8489.8193 C
-7651.5239 8490.0176 -7651.4673 8489.6777 -7651.4141 8489.8125 C
-7651.4912 8489.8232 -7651.5078 8489.9209 -7651.5161 8489.9697 C
-7651.7021 8489.8887 -7651.8486 8489.8633 -7651.6729 8489.5674 C
-7652.0869 8489.3477 -7652.1001 8490.1719 -7652.6274 8490.0322 C
-7652.6035 8489.8857 -7652.6436 8489.8301 -7652.7979 8489.8535 C
-7653.0903 8490.1055 L
-7653.4312 8490.0469 -7653.2842 8489.7705 -7653.2925 8489.5215 C
-7653.4746 8489.5645 -7653.6973 8489.5527 -7653.7803 8489.7383 C
-7654.0015 8489.4258 L
-7653.8398 8489.6514 -7654.1514 8489.5762 -7654.2368 8489.6367 C
-7654.1514 8489.5762 L
-7654.1846 8489.4697 -7654.3955 8489.5352 -7654.5024 8489.5664 C
-7654.4766 8489.7207 -7654.2617 8489.7832 -7654.1445 8489.8281 C
-7654.2373 8489.9375 -7654.3823 8489.9121 -7654.5059 8490.041 C
-7654.4648 8489.7969 -7654.8027 8489.8672 -7654.9473 8489.8418 C
-7655.1133 8489.7891 -7655.1348 8490.0605 -7655.1831 8490.0527 C
-7655.1875 8489.9258 -7655.4541 8490.0313 -7655.3247 8489.8535 C
-7655.2681 8489.8125 -7655.1953 8489.9766 -7655.1016 8489.8643 C
-7655.2109 8489.7705 -7655.1982 8489.5498 -7655.4258 8489.7109 C
-7655.5967 8489.832 -7655.3818 8490.1934 -7655.7061 8490.0391 C
-7655.6211 8489.9785 -7655.6055 8489.8809 -7655.5391 8489.793 C
-7655.8433 8489.666 L
-7655.8564 8489.8887 L
-7655.8975 8489.832 -7655.8691 8489.8125 -7655.8877 8489.7832 C
-7655.9785 8490.0176 -7656.3521 8489.8555 -7656.4209 8490.1191 C
-7656.5742 8490.1426 -7656.7441 8489.9648 -7656.8906 8489.9395 C
-7656.8623 8489.9199 L
-7657.0415 8489.7891 -7657.2793 8489.875 -7657.4297 8490.0254 C
-7657.4219 8489.9766 L
-7657.5195 8489.959 -7657.7505 8489.9941 -7657.8735 8490.125 C
-7658.1201 8489.957 -7657.9561 8489.2842 -7658.2295 8489.5645 C
-7658.48 8489.5723 -7658.6221 8489.9727 -7658.5215 8490.1152 C
-7658.9717 8489.9648 -7659.4834 8490.3281 -7659.9009 8489.9824 C
-7659.9658 8490.0723 -7659.9248 8490.1289 -7660.0586 8490.1816 C
-7660.7197 8490.0938 -7661.4551 8490.4453 -7661.9814 8490.0078 C
-7661.79 8489.9141 -7661.9688 8489.7842 -7661.9727 8489.6582 C
-7662.1309 8489.8574 -7662.1631 8489.4512 -7662.2197 8489.793 C
-7662.2041 8489.9941 -7662.2197 8490.0918 -7662.0337 8490.1729 C
-7662.4282 8490.2813 -7663.0283 8490.2813 -7663.2471 8490.0938 C
-7663.1377 8490.1865 -7663.2227 8490.248 -7663.3086 8490.3086 C
-7663.2803 8489.9873 -7663.5713 8489.9395 -7663.7915 8490.0527 C
-7663.8223 8490.248 L
-7663.9658 8490.0469 L
-7664.0503 8490.1094 -7664.0591 8490.457 -7664.2773 8490.2695 C
-7664.2891 8490.1934 -7664.3018 8490.1162 -7664.3418 8490.0605 C
-7664.5693 8490.2207 -7664.8906 8490.4922 -7665.1377 8490.3262 C
-7665.3398 8490.041 L
-7665.4453 8490.0723 -7665.6235 8490.2441 -7665.4375 8490.3262 C
-7665.8594 8490.1543 -7666.1309 8490.1328 -7666.2646 8489.8857 C
-7666.9912 8490.4873 -7668.0459 8490.5117 -7668.8906 8490.4688 C
-7668.8652 8490.3223 L
-7669.0923 8490.1855 -7668.9834 8490.5781 -7669.1416 8490.4766 C
-7669.0684 8490.3369 -7669.3145 8490.1729 -7669.1362 8490.002 C
-7669.4609 8489.8477 -7669.5547 8490.2559 -7669.7656 8490.3223 C
-7669.7979 8490.5146 -7669.5957 8490.1992 -7669.6367 8490.4434 C
-7669.6729 8490.5117 -7670.0859 8490.293 -7670.1362 8490.584 C
-7670.2178 8490.4697 -7670.1543 8490.2559 -7670.1104 8490.1377 C
-7670.3086 8490.2793 L
-7670.5513 8489.9395 -7669.7559 8489.6719 -7670.0107 8489.2529 C
-7670.1934 8489.2979 L
-7670.3682 8488.9941 -7669.71 8488.9551 -7670.1689 8488.8506 C
-7670.3682 8488.9941 -7670.5381 8489.416 -7670.3608 8489.5449 C
-7670.7754 8489.625 -7670.5527 8490.2383 -7670.9985 8490.2139 C
-7671.1201 8490.043 -7670.6416 8490.1729 -7670.7275 8489.9336 C
-7670.9375 8489.6992 -7671.1484 8490.0645 -7671.3354 8489.9824 C
-7671.1279 8490.0918 -7671.3032 8490.3857 -7671.4375 8490.4395 C
-7671.6641 8490.3018 -7671.29 8490.1641 -7671.6113 8490.1338 C
-7671.6641 8490.3018 -7671.9595 8490.4277 -7671.7041 8490.5449 C
-7671.8203 8490.9258 -7672.0381 8490.4395 -7672.2129 8490.7344 C
-7672.3174 8490.4658 -7671.8823 8490.1152 -7672.2354 8489.9814 C
-7672.1792 8490.2393 -7672.6704 8490.332 -7672.4839 8490.7139 C
-7672.6221 8490.6406 -7672.6367 8490.4375 -7672.5361 8490.2793 C
-7672.7334 8490.1201 -7673.0151 8490.75 -7673.0801 8490.2383 C
-7673.1479 8490.502 L
-7673.21 8490.416 -7673.2983 8490.3506 -7673.3994 8490.209 C
-7673.5732 8490.2041 -7673.96 8490.5664 -7673.9443 8490.168 C
-7674 8490.209 -7674.3975 8490.1914 -7674.2441 8490.4658 C
-7673.9971 8490.6338 -7673.96 8490.2656 -7673.8223 8490.6377 C
-7673.9971 8490.334 -7674.1787 8490.6777 -7674.3213 8490.7793 C
-7674.3447 8490.625 L
-7674.4297 8490.6855 -7674.6255 8490.6514 -7674.6787 8490.8184 C
-7674.6133 8490.7305 -7674.6475 8490.625 -7674.7148 8490.5879 C
-7674.8042 8490.8223 L
-7675.1494 8490.9395 -7674.8857 8490.4102 -7675.2217 8490.4785 C
-7674.9663 8490.2969 L
-7675.0225 8490.3359 -7675.1367 8490.1162 -7675.2979 8490.1895 C
-7675.3604 8490.4033 -7675.4775 8490.6602 -7675.5313 8490.8262 C
-7675.7207 8490.9199 -7675.6162 8490.585 -7675.8027 8490.8047 C
-7675.5586 8490.5469 L
-7675.5215 8490.4766 -7675.7231 8490.1934 -7675.9761 8490.1992 C
-7676.1377 8490.2734 -7676.3887 8490.582 -7676.1338 8490.6992 C
-7676.2607 8490.7031 -7676.4385 8490.5723 -7676.3379 8490.416 C
-7676.6255 8490.4902 -7676.2998 8490.6465 -7676.5479 8490.7793 C
-7676.6494 8490.6367 -7676.9658 8490.4336 -7677.1563 8490.2266 C
-7676.8975 8489.8682 L
-7677.0693 8489.8643 L
-7676.8467 8489.5781 -7677.1826 8489.6465 -7677.0566 8489.3438 C
-7677.1743 8489.2969 -7677.3169 8489.3994 -7677.4307 8489.4785 C
-7677.0864 8489.9629 -7677.8159 8490.1406 -7677.7158 8490.582 C
-7678.1875 8490.7031 -7678.0107 8489.5078 -7678.5024 8490.1992 C
-7678.4219 8490.3145 -7678.6533 8490.6504 -7678.3564 8490.5225 C
-7678.6494 8490.4746 -7678.5557 8490.9658 -7678.9014 8490.7832 C
-7678.6455 8490.6016 -7679.1763 8490.3359 -7678.8066 8490.0723 C
-7678.8311 8490.2178 -7678.6001 8490.1826 -7678.5435 8490.1426 C
-7678.6641 8489.9727 -7678.5186 8489.6973 -7678.8184 8489.6973 C
-7679.0015 8489.7393 -7679.2524 8489.748 -7679.2158 8489.9785 C
-7679.2085 8490.2314 -7678.9365 8489.9512 -7679.0537 8490.207 C
-7679.4185 8490.2949 -7679.4795 8489.9102 -7679.6304 8490.3594 C
-7679.3999 8490.3232 -7679.3423 8490.584 -7679.3467 8490.7578 C
-7679.6143 8490.8633 L
-7679.5625 8490.6953 L
-7679.9922 8490.5742 -7679.6895 8491 -7680.1055 8490.9551 C
-7680.3008 8490.623 L
-7680.2017 8490.3369 -7679.6953 8490.75 -7679.7695 8490.2842 C
-7680.04 8490.2656 -7680.1299 8490.502 -7680.3848 8490.3818 C
-7680.3281 8490.3418 -7680.2505 8490.3301 -7680.1943 8490.2891 C
-7680.2915 8490.2734 -7680.3877 8489.6563 -7680.7734 8490.0176 C
-7680.9727 8490.1582 -7680.8262 8490.1826 -7680.8311 8490.3574 C
-7681.2656 8490.4102 -7681.3955 8490.5879 -7681.6753 8490.6152 C
-7681.6177 8490.2754 -7682.1699 8490.582 -7681.8608 8490.2344 C
-7681.7188 8490.4336 -7681.0903 8490.4141 -7680.9365 8490.0898 C
-7681.0947 8489.6865 -7680.5952 8490.1465 -7680.5024 8489.7383 C
-7680.8506 8489.7285 -7680.8335 8489.332 -7680.8896 8489.0723 C
-7680.9863 8489.0537 -7681.0801 8489.1641 -7681.1377 8489.2041 C
-7681.1787 8489.4482 -7681.0522 8489.4453 -7681.0449 8489.6973 C
-7681.4336 8489.6309 -7681.8081 8489.7666 -7682.0225 8490.0059 C
-7682.1523 8489.8848 -7682.1113 8489.6406 -7681.9575 8489.6162 C
-7682.4199 8489.6895 -7682.9141 8489.6563 -7683.3535 8489.582 C
-7683.0693 8489.9814 -7683.8433 8489.6758 -7683.6494 8490.0078 C
-7683.4141 8490.0977 -7683.2119 8490.3818 -7683.3418 8490.5605 C
-7683.4888 8490.5352 -7683.3369 8490.3857 -7683.3984 8490.3008 C
-7683.5859 8490.5186 -7683.6895 8489.9512 -7683.8735 8490.2949 C
-7683.4512 8490.166 -7683.7915 8489.8086 -7683.7139 8489.4961 C
-7684.0186 8489.6719 -7683.7007 8489.2734 -7684.0024 8489.2734 C
-7684.3057 8489.4473 -7684.6787 8489.584 -7685.0161 8489.6514 C
-7685.4399 8489.3555 -7686.0898 8489.6465 -7686.4683 8489.6582 C
-7686.6665 8489.5 -7686.5322 8489.1465 -7686.7471 8489.085 C
-7686.9995 8489.0918 -7686.5601 8489.4658 -7686.9336 8489.3047 C
-7686.8975 8489.2344 L
-7687.0107 8489.3154 -7687.5825 8488.9941 -7687.6929 8489.502 C
-7687.5776 8489.1191 L
-7687.6475 8489.084 -7687.7119 8489.1719 -7687.7695 8489.2129 C
-7687.7725 8489.0879 -7687.8535 8488.9746 -7687.7402 8488.8926 C
-7687.9707 8488.6289 -7688.2241 8488.9346 -7688.4746 8488.9453 C
-7688.3135 8489.1719 L
-7688.7422 8489.3496 -7689.0293 8489.125 -7689.4443 8489.2041 C
-7689.4316 8488.9824 L
-7689.6787 8489.1152 L
-7689.6182 8488.8994 -7689.8447 8488.7617 -7689.9751 8488.9414 C
-7689.3335 8488.3984 L
-7689.1553 8488.5293 -7689.5283 8488.666 -7689.4165 8488.8848 C
-7689.3213 8489.0762 -7688.9375 8489.0146 -7688.8755 8488.8018 C
-7689.0225 8488.7773 -7689.0293 8488.8262 -7689.1436 8488.9063 C
-7689.1919 8488.5977 -7688.9688 8488.6094 -7688.8584 8488.4033 C
-7688.9355 8488.416 -7689.0449 8488.3223 -7689.0615 8488.4199 C
-7688.9102 8488.2695 -7688.7578 8488.2461 -7688.5059 8488.2383 C
-7688.6763 8488.3594 -7688.4131 8488.4297 -7688.4775 8488.5176 C
-7688.4575 8488.2461 -7688.2168 8488.1621 -7687.9053 8488.2383 C
-7687.6831 8488.5527 -7687.3208 8488.0361 -7686.96 8488.123 C
-7687.1064 8488.3984 -7687.2935 8488.6191 -7687.5127 8488.7305 C
-7687.2861 8488.8682 -7687.2607 8488.7227 -7687.0337 8488.8613 C
-7686.9238 8488.6563 -7686.8457 8488.3418 -7686.5503 8488.2168 C
-7686.5342 8488.4199 L
-7686.2666 8488.3154 -7686.2666 8488.0146 -7685.9258 8488.0723 C
-7685.3418 8488.1719 -7684.7407 8488.1719 -7684.2949 8488.1973 C
-7684.2783 8488.3994 L
-7684.0303 8487.9658 -7683.4521 8488.2393 -7683.1182 8488.0469 C
-7682.5503 8488.2422 -7681.8848 8487.8535 -7681.5938 8488.2031 C
-7680.5913 8488.0469 -7679.7148 8487.8945 -7678.6768 8487.9688 C
-7678.8516 8488.2637 L
-7678.6655 8488.0469 -7678.7305 8488.4336 -7678.5479 8488.3896 C
-7678.7578 8488.1543 -7678.2949 8488.084 -7678.1665 8487.9033 C
-7677.7041 8488.1328 -7677.1104 8487.8818 -7676.7007 8487.6758 C
-7676.6846 8487.8789 L
-7676.2705 8487.498 -7675.7759 8487.832 -7675.2598 8487.8945 C
-7675.2007 8487.9785 -7675.1074 8488.1689 -7674.9536 8488.1465 C
-7674.6738 8487.8184 -7674.5273 8487.8418 -7674.1167 8487.6367 C
-7673.8169 8487.6367 -7673.3301 8487.7178 -7673.0254 8487.8457 C
-7671.8975 8487.3848 -7670.7456 8487.6797 -7669.5732 8487.4023 C
-7669.4888 8487.6406 L
-7668.3521 8487.1309 -7666.9541 8487.5938 -7665.9839 8487.332 C
-7666.0776 8487.7393 L
-7665.7734 8487.8643 -7665.3843 8487.6328 -7665.4619 8487.3438 C
-7665.1567 8487.4688 -7664.7007 8487.1465 -7664.5068 8487.4814 C
-7664.1953 8487.5566 -7664.1255 8487.293 -7663.8662 8487.2383 C
-7663.2422 8487.3926 -7663.0107 8487.3574 -7662.4224 8487.2813 C
-7662.5684 8487.2559 L
-7662.6328 8487.3457 -7662.6387 8487.5186 -7662.4922 8487.5449 C
-7662.2725 8487.4307 -7661.6846 8487.6543 -7661.9033 8487.168 C
-7661.2754 8487.4482 -7660.4385 8486.9395 -7659.8271 8487.3184 C
-7659.8789 8487.1855 -7659.7246 8487.1602 -7659.6602 8487.0703 C
-7659.1089 8487.0645 -7658.5293 8487.3359 -7658.0898 8487.1094 C
-7658.0024 8487.1758 -7658.2295 8487.3359 -7658.0049 8487.3496 C
-7657.8721 8487.2979 -7658.0024 8487.1758 -7657.8384 8487.1016 C
-7656.9453 8486.8535 -7656.0303 8487.3574 -7655.2188 8487.293 C
-7653.7754 8487.0361 -7652.2695 8487.166 -7650.8867 8487.123 C
-7650.9023 8487.2207 L
-7650.4395 8486.8477 -7649.8159 8487.6025 -7649.4463 8487.041 C
-7649.3369 8487.1338 -7649.0283 8487.085 -7649.1094 8487.2734 C
-7648.7407 8487.0098 -7648.0771 8487.5215 -7647.5439 8487.1865 C
-7647.5928 8487.1777 -7647.6211 8487.1973 -7647.6777 8487.2393 C
-7647.1392 8487.4551 -7646.6641 8487.1602 -7646.0957 8487.3555 C
-7646.1533 8487.3975 -7646.2583 8487.4277 -7646.2754 8487.5254 C
-7646.0557 8487.7129 -7645.7549 8487.1133 -7645.6348 8487.584 C
-7645.5088 8487.5801 -7645.5449 8487.3477 -7645.6221 8487.3613 C
-7644.3779 8487.5449 -7643.0498 8487.2441 -7641.7549 8487.1367 C
-7640.8271 8487.418 -7641.6982 8487.9297 -7640.9663 8487.5781 C
-7640.9063 8487.6689 -7640.9229 8487.3984 -7640.9131 8487.4961 C
-7640.6299 8487.3643 -7640.4717 8488.0215 -7640.2754 8487.7754 C
-7640.3564 8487.4863 -7640.1445 8487.6133 -7640.1387 8487.4375 C
-7639.5713 8487.625 -7639.4575 8487.8857 -7639.0098 8487.666 C
-7639.0435 8487.8184 L
-7638.5186 8487.3887 -7637.9102 8487.6191 -7637.4673 8487.123 C
-7634.5728 8487.0322 -7631.7983 8486.7578 -7628.9761 8486.7002 C
-7626.1865 8486.7949 -7623.4551 8486.5723 -7620.6221 8486.8359 C
-7619.9585 8487.2354 -7619.9087 8487.2246 -7619.1797 8487.0625 C
-7619.2095 8487.127 -7619.2549 8487.1426 -7619.2061 8487.2031 C
-7619.1699 8486.875 -7618.6929 8487.1719 -7618.6235 8486.8594 C
-7617.5762 8486.9199 -7616.6113 8486.8301 -7615.5337 8486.8281 C
-7615.7041 8486.8633 -7615.7896 8487.1309 -7615.5869 8487.1094 C
-7615.3755 8486.8994 L
-7615.3408 8486.9922 L
-7615.2021 8486.9434 -7615.0513 8486.7813 -7615.1943 8486.6758 C
-7612.4873 8486.3926 -7609.8242 8487.0498 -7607.1729 8486.9697 C
-7606.5435 8487.1064 -7605.6475 8486.9814 -7604.9629 8486.9141 C
-7602.9355 8487.3506 -7601.1079 8487.7041 -7599.0479 8487.3984 C
-7599.3169 8488.2461 -7600.1675 8488.4414 V
f
-7690.2578 8488.2422 m
-7690.1855 8488.4063 -7689.9497 8488.4961 -7690.1377 8488.7139 C
-7690.1611 8488.5605 -7690.2822 8488.3887 -7690.2578 8488.2422 C
f
-7683.9619 8489.9297 m
-7683.9536 8489.8809 -7683.8721 8489.9961 -7683.8521 8490.0225 C
-7683.9297 8490.0352 -7684.0024 8490.1729 -7684.0645 8490.0879 C
-7683.9854 8490.0762 -7683.9976 8489.998 -7683.9619 8489.9297 C
f
-7682.3521 8490.0273 m
-7682.3765 8490.1729 -7682.7207 8490.2891 -7682.9238 8490.3066 C
-7682.3521 8490.0273 L
f
-7680.8521 8490.6289 m
-7680.7227 8490.752 -7680.7583 8490.8193 -7680.9326 8490.8154 C
-7680.9453 8490.7383 -7680.8877 8490.6992 -7680.8521 8490.6289 C
f
-7680.7456 8490.2969 m
-7680.6211 8490.293 -7680.5591 8490.3789 -7680.4985 8490.4629 C
-7680.5029 8490.3369 -7680.7871 8490.541 -7680.7456 8490.2969 C
f
-7677.4893 8490.7207 m
-7677.4111 8490.709 -7677.2417 8490.5879 -7677.1689 8490.75 C
-7677.2505 8490.6367 -7677.5498 8490.9346 -7677.4893 8490.7207 C
f
-7675.9761 8490.5 m
-7675.9272 8490.5098 -7675.9072 8490.5361 -7675.8506 8490.4961 C
-7675.7607 8490.5625 -7675.8555 8490.6689 -7675.9312 8490.6826 C
-7675.9761 8490.5 L
f
-7648.4287 8489.9141 m
-7648.5923 8489.9863 L
-7648.5684 8489.8418 L
-7648.4287 8489.9141 L
f
-7636.3574 8489.9063 m
-7636.1943 8489.8145 -7636.2441 8490.043 -7636.2168 8490.0645 C
-7636.3643 8490.0801 -7636.1621 8489.8848 -7636.3574 8489.9063 C
f
-7629.8486 8489.1777 m
-7629.8984 8489.1816 L
-7629.8818 8488.8818 L
-7629.8486 8489.1777 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pattern 6)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-7690 8488.4824 m
-7547.0806 8488.4824 L
-7547.0806 8465.4023 L
-7690 8465.4023 L
-7690 8488.4824 L
n
u
0 O
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7628.6196 8470.5117 m
-7626.9126 8473.04 -7624.3247 8476.0801 -7621.3345 8479.0703 c
-7615.8403 8484.5625 -7609.1841 8489.582 -7607.6665 8488.0654 C
-7608.0161 8487.7148 L
-7608.3794 8488.0762 -7609.7476 8487.8018 -7612.4985 8485.9453 c
-7615.0005 8484.2559 -7618.0142 8481.6895 -7620.9829 8478.7197 c
-7627.4546 8472.248 -7629.9795 8467.6309 -7629.0415 8466.6914 C
-7630.3296 8465.4023 L
-7631.0195 8466.0918 -7630.4438 8467.8105 -7628.6196 8470.5117 c
f
-7635.8843 8478.4727 m
-7635.3892 8478.4727 L
-7635.3892 8477.1445 -7629.0103 8475.6641 -7619.8589 8475.6641 c
-7610.7075 8475.6641 -7604.3306 8477.1445 -7604.3306 8478.4727 C
-7602.1138 8478.4727 L
-7602.1138 8476.3271 -7612.0903 8475.168 -7619.8589 8475.168 c
-7627.6284 8475.168 -7635.8843 8476.3271 -7635.8843 8478.4727 C
f
-7612.0288 8467.5293 m
-7614.5562 8469.2354 -7617.5962 8471.8242 -7620.5864 8474.8145 c
-7626.0796 8480.3086 -7631.0991 8486.9648 -7629.5815 8488.4824 C
-7628.5278 8487.4277 L
-7629.4663 8486.4873 -7626.7075 8481.6367 -7620.2358 8475.1641 c
-7617.2671 8472.1953 -7614.2534 8469.6289 -7611.7524 8467.9395 c
-7609.0005 8466.082 -7607.6323 8465.8066 -7607.2695 8466.1689 C
-7606.9185 8465.8193 L
-7607.6099 8465.1289 -7609.3286 8465.7041 -7612.0288 8467.5293 c
f
u
1 Ap
-7614.0376 8478.1426 m
-7614.0376 8480.5596 -7615.9985 8482.5186 -7618.4146 8482.5186 c
-7620.8325 8482.5186 -7622.7935 8480.5596 -7622.7935 8478.1426 c
-7622.7935 8475.7246 -7620.8325 8473.7646 -7618.4146 8473.7646 c
-7615.9985 8473.7646 -7614.0376 8475.7246 -7614.0376 8478.1426 c
f
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (B) XT
0 Ap
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7614.3267 8477.9922 m
-7614.3267 8480.166 -7616.0903 8481.9297 -7618.2642 8481.9297 c
-7620.4399 8481.9297 -7622.2036 8480.166 -7622.2036 8477.9922 c
-7622.2036 8475.8154 -7620.4399 8474.0537 -7618.2642 8474.0537 c
-7616.0903 8474.0537 -7614.3267 8475.8154 -7614.3267 8477.9922 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7614.6177 8477.8418 m
-7614.6177 8479.7734 -7616.1841 8481.3398 -7618.1147 8481.3398 c
-7620.0464 8481.3398 -7621.6128 8479.7734 -7621.6128 8477.8418 c
-7621.6128 8475.9102 -7620.0464 8474.3447 -7618.1147 8474.3447 c
-7616.1841 8474.3447 -7614.6177 8475.9102 -7614.6177 8477.8418 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7614.9067 8477.6914 m
-7614.9067 8479.3799 -7616.2769 8480.749 -7617.9653 8480.749 c
-7619.6528 8480.749 -7621.0225 8479.3799 -7621.0225 8477.6914 c
-7621.0225 8476.0029 -7619.6528 8474.6348 -7617.9653 8474.6348 c
-7616.2769 8474.6348 -7614.9067 8476.0029 -7614.9067 8477.6914 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7615.1978 8477.541 m
-7615.1978 8478.9863 -7616.3696 8480.1582 -7617.8149 8480.1582 c
-7619.2603 8480.1582 -7620.4321 8478.9863 -7620.4321 8477.541 c
-7620.4321 8476.0957 -7619.2603 8474.9248 -7617.8149 8474.9248 c
-7616.3696 8474.9248 -7615.1978 8476.0957 -7615.1978 8477.541 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7615.4868 8477.3906 m
-7615.4868 8478.5938 -7616.4634 8479.5674 -7617.6646 8479.5674 c
-7618.8667 8479.5674 -7619.8423 8478.5938 -7619.8423 8477.3906 c
-7619.8423 8476.1895 -7618.8667 8475.2139 -7617.6646 8475.2139 c
-7616.4634 8475.2139 -7615.4868 8476.1895 -7615.4868 8477.3906 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7615.7778 8477.2402 m
-7615.7778 8478.2002 -7616.5552 8478.9785 -7617.5142 8478.9785 c
-7618.4731 8478.9785 -7619.2515 8478.2002 -7619.2515 8477.2402 c
-7619.2515 8476.2822 -7618.4731 8475.5049 -7617.5142 8475.5049 c
-7616.5552 8475.5049 -7615.7778 8476.2822 -7615.7778 8477.2402 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7616.0679 8477.0908 m
-7616.0679 8477.8066 -7616.6489 8478.3877 -7617.3638 8478.3877 c
-7618.0806 8478.3877 -7618.6606 8477.8066 -7618.6606 8477.0908 c
-7618.6606 8476.375 -7618.0806 8475.7949 -7617.3638 8475.7949 c
-7616.6489 8475.7949 -7616.0679 8476.375 -7616.0679 8477.0908 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7616.3579 8476.9414 m
-7616.3579 8477.4141 -7616.7417 8477.7969 -7617.2134 8477.7969 c
-7617.6875 8477.7969 -7618.0708 8477.4141 -7618.0708 8476.9414 c
-7618.0708 8476.4688 -7617.6875 8476.085 -7617.2134 8476.085 c
-7616.7417 8476.085 -7616.3579 8476.4688 -7616.3579 8476.9414 c
f
1 Ap
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7616.6479 8476.791 m
-7616.6479 8477.0205 -7616.8345 8477.207 -7617.0645 8477.207 c
-7617.2935 8477.207 -7617.4814 8477.0205 -7617.4814 8476.791 c
-7617.4814 8476.5605 -7617.2935 8476.375 -7617.0645 8476.375 c
-7616.8345 8476.375 -7616.6479 8476.5605 -7616.6479 8476.791 c
f
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (A) XT
U
u
u
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7639.7329 8478.5186 m
-7639.7329 8480.6191 -7641.4341 8482.3223 -7643.5337 8482.3223 c
-7645.6348 8482.3223 -7647.3369 8480.6191 -7647.3369 8478.5186 c
-7647.3369 8476.4199 -7645.6348 8474.7178 -7643.5337 8474.7178 c
-7641.4341 8474.7178 -7639.7329 8476.4199 -7639.7329 8478.5186 c
f
0 Ap
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7646.7437 8478.3896 m
-7646.7437 8476.5 -7645.2485 8474.9697 -7643.4038 8474.9697 c
-7641.5601 8474.9697 -7640.0649 8476.5 -7640.0649 8478.3896 c
-7640.0649 8480.2783 -7641.5601 8481.8096 -7643.4038 8481.8096 c
-7645.2485 8481.8096 -7646.7437 8480.2783 -7646.7437 8478.3896 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7646.1509 8478.2578 m
-7646.1509 8476.5811 -7644.8628 8475.2217 -7643.2739 8475.2217 c
-7641.6851 8475.2217 -7640.3975 8476.5811 -7640.3975 8478.2578 c
-7640.3975 8479.9375 -7641.6851 8481.2969 -7643.2739 8481.2969 c
-7644.8628 8481.2969 -7646.1509 8479.9375 -7646.1509 8478.2578 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7645.5576 8478.1289 m
-7645.5576 8476.6621 -7644.4771 8475.4736 -7643.1431 8475.4736 c
-7641.8091 8475.4736 -7640.7295 8476.6621 -7640.7295 8478.1289 c
-7640.7295 8479.5957 -7641.8091 8480.7842 -7643.1431 8480.7842 c
-7644.4771 8480.7842 -7645.5576 8479.5957 -7645.5576 8478.1289 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7644.9648 8477.998 m
-7644.9648 8476.7422 -7644.0903 8475.7256 -7643.0122 8475.7256 c
-7641.9351 8475.7256 -7641.0615 8476.7422 -7641.0615 8477.998 c
-7641.0615 8479.2529 -7641.9351 8480.2705 -7643.0122 8480.2705 c
-7644.0903 8480.2705 -7644.9648 8479.2529 -7644.9648 8477.998 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7644.3716 8477.8672 m
-7644.3716 8476.8242 -7643.7046 8475.9775 -7642.8833 8475.9775 c
-7642.0601 8475.9775 -7641.3931 8476.8242 -7641.3931 8477.8672 c
-7641.3931 8478.9121 -7642.0601 8479.7578 -7642.8833 8479.7578 c
-7643.7046 8479.7578 -7644.3716 8478.9121 -7644.3716 8477.8672 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7643.7788 8477.7373 m
-7643.7788 8476.9033 -7643.3188 8476.2295 -7642.7524 8476.2295 c
-7642.1851 8476.2295 -7641.7251 8476.9033 -7641.7251 8477.7373 c
-7641.7251 8478.5703 -7642.1851 8479.2461 -7642.7524 8479.2461 c
-7643.3188 8479.2461 -7643.7788 8478.5703 -7643.7788 8477.7373 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7643.1865 8477.6074 m
-7643.1865 8476.9854 -7642.9331 8476.4814 -7642.6216 8476.4814 c
-7642.3101 8476.4814 -7642.0571 8476.9854 -7642.0571 8477.6074 c
-7642.0571 8478.2285 -7642.3101 8478.7324 -7642.6216 8478.7324 c
-7642.9331 8478.7324 -7643.1865 8478.2285 -7643.1865 8477.6074 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7642.5923 8477.4766 m
-7642.5923 8477.0664 -7642.5474 8476.7324 -7642.4907 8476.7324 c
-7642.4365 8476.7324 -7642.3892 8477.0664 -7642.3892 8477.4766 c
-7642.3892 8477.8857 -7642.4365 8478.2207 -7642.4907 8478.2207 c
-7642.5474 8478.2207 -7642.5923 8477.8857 -7642.5923 8477.4766 c
f
1 Ap
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7641.9995 8477.3457 m
-7641.9995 8477.5449 -7642.1606 8477.708 -7642.3608 8477.708 c
-7642.5601 8477.708 -7642.7222 8477.5449 -7642.7222 8477.3457 c
-7642.7222 8477.1465 -7642.5601 8476.9854 -7642.3608 8476.9854 c
-7642.1606 8476.9854 -7641.9995 8477.1465 -7641.9995 8477.3457 c
f
U
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (B) XT
u
0 Ap
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7651.1841 8478.5186 m
-7651.1841 8480.4023 -7652.7104 8481.9297 -7654.5933 8481.9297 c
-7656.4761 8481.9297 -7658.0029 8480.4023 -7658.0029 8478.5186 c
-7658.0029 8476.6367 -7656.4761 8475.1113 -7654.5933 8475.1113 c
-7652.7104 8475.1113 -7651.1841 8476.6367 -7651.1841 8478.5186 c
f
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7651.4702 8478.4033 m
-7651.4702 8480.0967 -7652.8159 8481.4697 -7654.4761 8481.4697 c
-7656.1367 8481.4697 -7657.4824 8480.0967 -7657.4824 8478.4033 c
-7657.4824 8476.709 -7656.1367 8475.3369 -7654.4761 8475.3369 c
-7652.8159 8475.3369 -7651.4702 8476.709 -7651.4702 8478.4033 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7651.7563 8478.2842 m
-7651.7563 8479.791 -7652.9219 8481.0098 -7654.3589 8481.0098 c
-7655.7974 8481.0098 -7656.9629 8479.791 -7656.9629 8478.2842 c
-7656.9629 8476.7813 -7655.7974 8475.5625 -7654.3589 8475.5625 c
-7652.9219 8475.5625 -7651.7563 8476.7813 -7651.7563 8478.2842 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7652.0425 8478.168 m
-7652.0425 8479.4844 -7653.0273 8480.5498 -7654.2422 8480.5498 c
-7655.4585 8480.5498 -7656.4429 8479.4844 -7656.4429 8478.168 c
-7656.4429 8476.8535 -7655.4585 8475.7891 -7654.2422 8475.7891 c
-7653.0273 8475.7891 -7652.0425 8476.8535 -7652.0425 8478.168 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7652.3286 8478.0518 m
-7652.3286 8479.1777 -7653.1328 8480.0898 -7654.1255 8480.0898 c
-7655.1182 8480.0898 -7655.9229 8479.1777 -7655.9229 8478.0518 c
-7655.9229 8476.9258 -7655.1182 8476.0146 -7654.1255 8476.0146 c
-7653.1328 8476.0146 -7652.3286 8476.9258 -7652.3286 8478.0518 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7652.6147 8477.9346 m
-7652.6147 8478.8711 -7653.2388 8479.6309 -7654.0088 8479.6309 c
-7654.7783 8479.6309 -7655.4028 8478.8711 -7655.4028 8477.9346 c
-7655.4028 8476.999 -7654.7783 8476.2402 -7654.0088 8476.2402 c
-7653.2388 8476.2402 -7652.6147 8476.999 -7652.6147 8477.9346 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7652.9009 8477.8184 m
-7652.9009 8478.5645 -7653.3442 8479.1689 -7653.8921 8479.1689 c
-7654.4395 8479.1689 -7654.8828 8478.5645 -7654.8828 8477.8184 c
-7654.8828 8477.0723 -7654.4395 8476.4668 -7653.8921 8476.4668 c
-7653.3442 8476.4668 -7652.9009 8477.0723 -7652.9009 8477.8184 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7653.1875 8477.7002 m
-7653.1875 8478.2598 -7653.4497 8478.7109 -7653.7749 8478.7109 c
-7654.1001 8478.7109 -7654.3628 8478.2598 -7654.3628 8477.7002 c
-7654.3628 8477.1445 -7654.1001 8476.6924 -7653.7749 8476.6924 c
-7653.4497 8476.6924 -7653.1875 8477.1445 -7653.1875 8477.7002 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7653.4727 8477.584 m
-7653.4727 8477.3359 -7653.5562 8477.1357 -7653.6577 8477.1357 c
-7653.7603 8477.1357 -7653.8433 8477.3359 -7653.8433 8477.584 c
-7653.8433 8477.832 -7653.7603 8478.0332 -7653.6577 8478.0332 c
-7653.5562 8478.0332 -7653.4727 8477.832 -7653.4727 8477.584 c
f
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7653.7593 8477.4668 m
-7653.7593 8477.2891 -7653.6611 8477.1445 -7653.5405 8477.1445 c
-7653.4204 8477.1445 -7653.3232 8477.2891 -7653.3232 8477.4668 c
-7653.3232 8477.6465 -7653.4204 8477.792 -7653.5405 8477.792 c
-7653.6611 8477.792 -7653.7593 8477.6465 -7653.7593 8477.4668 c
f
U
u
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7662.6362 8478.5186 m
-7662.6362 8480.1855 -7663.9863 8481.5352 -7665.6519 8481.5352 c
-7667.3179 8481.5352 -7668.6685 8480.1855 -7668.6685 8478.5186 c
-7668.6685 8476.8535 -7667.3179 8475.5039 -7665.6519 8475.5039 c
-7663.9863 8475.5039 -7662.6362 8476.8535 -7662.6362 8478.5186 c
f
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7662.8765 8478.416 m
-7662.8765 8479.9141 -7664.0728 8481.1289 -7665.5483 8481.1289 c
-7667.0249 8481.1289 -7668.2212 8479.9141 -7668.2212 8478.416 c
-7668.2212 8476.918 -7667.0249 8475.7041 -7665.5483 8475.7041 c
-7664.0728 8475.7041 -7662.8765 8476.918 -7662.8765 8478.416 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7663.1162 8478.3125 m
-7663.1162 8479.6445 -7664.1592 8480.7227 -7665.4448 8480.7227 c
-7666.7319 8480.7227 -7667.7749 8479.6445 -7667.7749 8478.3125 c
-7667.7749 8476.9824 -7666.7319 8475.9033 -7665.4448 8475.9033 c
-7664.1592 8475.9033 -7663.1162 8476.9824 -7663.1162 8478.3125 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7663.3564 8478.209 m
-7663.3564 8479.373 -7664.2446 8480.3164 -7665.3413 8480.3164 c
-7666.4395 8480.3164 -7667.3276 8479.373 -7667.3276 8478.209 c
-7667.3276 8477.0469 -7666.4395 8476.1025 -7665.3413 8476.1025 c
-7664.2446 8476.1025 -7663.3564 8477.0469 -7663.3564 8478.209 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7663.5962 8478.1055 m
-7663.5962 8479.1016 -7664.3315 8479.9082 -7665.2383 8479.9082 c
-7666.1455 8479.9082 -7666.8809 8479.1016 -7666.8809 8478.1055 c
-7666.8809 8477.1094 -7666.1455 8476.3018 -7665.2383 8476.3018 c
-7664.3315 8476.3018 -7663.5962 8477.1094 -7663.5962 8478.1055 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7663.8359 8478.002 m
-7663.8359 8478.8311 -7664.4175 8479.502 -7665.1353 8479.502 c
-7665.8521 8479.502 -7666.4341 8478.8311 -7666.4341 8478.002 c
-7666.4341 8477.1738 -7665.8521 8476.5039 -7665.1353 8476.5039 c
-7664.4175 8476.5039 -7663.8359 8477.1738 -7663.8359 8478.002 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7664.0762 8477.8984 m
-7664.0762 8478.5605 -7664.5034 8479.0957 -7665.0317 8479.0957 c
-7665.5596 8479.0957 -7665.9873 8478.5605 -7665.9873 8477.8984 c
-7665.9873 8477.2383 -7665.5596 8476.7031 -7665.0317 8476.7031 c
-7664.5034 8476.7031 -7664.0762 8477.2383 -7664.0762 8477.8984 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7664.3159 8477.7959 m
-7664.3159 8478.2891 -7664.5898 8478.6895 -7664.9282 8478.6895 c
-7665.2661 8478.6895 -7665.5405 8478.2891 -7665.5405 8477.7959 c
-7665.5405 8477.3018 -7665.2661 8476.9023 -7664.9282 8476.9023 c
-7664.5898 8476.9023 -7664.3159 8477.3018 -7664.3159 8477.7959 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7664.5557 8477.6924 m
-7664.5557 8477.6074 -7664.6763 8477.5391 -7664.8247 8477.5391 c
-7664.9731 8477.5391 -7665.0933 8477.6074 -7665.0933 8477.6924 c
-7665.0933 8477.7773 -7664.9731 8477.8457 -7664.8247 8477.8457 c
-7664.6763 8477.8457 -7664.5557 8477.7773 -7664.5557 8477.6924 c
f
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7664.7959 8477.5889 m
-7664.7959 8477.4316 -7664.7622 8477.3018 -7664.7212 8477.3018 c
-7664.6802 8477.3018 -7664.6465 8477.4316 -7664.6465 8477.5889 c
-7664.6465 8477.748 -7664.6802 8477.876 -7664.7212 8477.876 c
-7664.7622 8477.876 -7664.7959 8477.748 -7664.7959 8477.5889 c
f
U
u
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7674.0884 8478.5186 m
-7674.0884 8479.9688 -7675.2622 8481.1426 -7676.7104 8481.1426 c
-7678.1597 8481.1426 -7679.3345 8479.9688 -7679.3345 8478.5186 c
-7679.3345 8477.0703 -7678.1597 8475.8975 -7676.7104 8475.8975 c
-7675.2622 8475.8975 -7674.0884 8477.0703 -7674.0884 8478.5186 c
f
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7674.2817 8478.4297 m
-7674.2817 8479.7324 -7675.3291 8480.7891 -7676.6211 8480.7891 c
-7677.9131 8480.7891 -7678.9604 8479.7324 -7678.9604 8478.4297 c
-7678.9604 8477.127 -7677.9131 8476.0703 -7676.6211 8476.0703 c
-7675.3291 8476.0703 -7674.2817 8477.127 -7674.2817 8478.4297 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7674.4761 8478.3398 m
-7674.4761 8479.498 -7675.3965 8480.4346 -7676.5308 8480.4346 c
-7677.6665 8480.4346 -7678.5864 8479.498 -7678.5864 8478.3398 c
-7678.5864 8477.1826 -7677.6665 8476.2441 -7676.5308 8476.2441 c
-7675.3965 8476.2441 -7674.4761 8477.1826 -7674.4761 8478.3398 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7674.6694 8478.25 m
-7674.6694 8479.2617 -7675.4624 8480.082 -7676.4409 8480.082 c
-7677.4199 8480.082 -7678.2124 8479.2617 -7678.2124 8478.25 c
-7678.2124 8477.2383 -7677.4199 8476.4189 -7676.4409 8476.4189 c
-7675.4624 8476.4189 -7674.6694 8477.2383 -7674.6694 8478.25 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7674.8638 8478.1602 m
-7674.8638 8479.0254 -7675.5293 8479.7285 -7676.3511 8479.7285 c
-7677.1729 8479.7285 -7677.8389 8479.0254 -7677.8389 8478.1602 c
-7677.8389 8477.293 -7677.1729 8476.5918 -7676.3511 8476.5918 c
-7675.5293 8476.5918 -7674.8638 8477.293 -7674.8638 8478.1602 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7675.0571 8478.0703 m
-7675.0571 8478.791 -7675.5962 8479.375 -7676.2612 8479.375 c
-7676.9263 8479.375 -7677.4648 8478.791 -7677.4648 8478.0703 c
-7677.4648 8477.3496 -7676.9263 8476.7656 -7676.2612 8476.7656 c
-7675.5962 8476.7656 -7675.0571 8477.3496 -7675.0571 8478.0703 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7675.2515 8477.9805 m
-7675.2515 8478.5537 -7675.6631 8479.0205 -7676.1714 8479.0205 c
-7676.6797 8479.0205 -7677.0913 8478.5537 -7677.0913 8477.9805 c
-7677.0913 8477.4063 -7676.6797 8476.9395 -7676.1714 8476.9395 c
-7675.6631 8476.9395 -7675.2515 8477.4063 -7675.2515 8477.9805 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7675.4448 8477.8906 m
-7675.4448 8478.3193 -7675.73 8478.667 -7676.0811 8478.667 c
-7676.4331 8478.667 -7676.7178 8478.3193 -7676.7178 8477.8906 c
-7676.7178 8477.4609 -7676.4331 8477.1133 -7676.0811 8477.1133 c
-7675.73 8477.1133 -7675.4448 8477.4609 -7675.4448 8477.8906 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7675.6387 8477.8008 m
-7675.6387 8477.8789 -7675.7969 8477.9414 -7675.9912 8477.9414 c
-7676.1865 8477.9414 -7676.3438 8477.8789 -7676.3438 8477.8008 c
-7676.3438 8477.7227 -7676.1865 8477.6592 -7675.9912 8477.6592 c
-7675.7969 8477.6592 -7675.6387 8477.7227 -7675.6387 8477.8008 c
f
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7675.8325 8477.7109 m
-7675.8325 8477.5723 -7675.8638 8477.4609 -7675.9009 8477.4609 c
-7675.9395 8477.4609 -7675.9697 8477.5723 -7675.9697 8477.7109 c
-7675.9697 8477.8477 -7675.9395 8477.96 -7675.9009 8477.96 c
-7675.8638 8477.96 -7675.8325 8477.8477 -7675.8325 8477.7109 c
f
U
u
1 Ap
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7685.54 8478.5186 m
-7685.54 8479.752 -7686.5386 8480.75 -7687.7695 8480.75 c
-7689.0015 8480.75 -7690 8479.752 -7690 8478.5186 c
-7690 8477.2881 -7689.0015 8476.291 -7687.7695 8476.291 c
-7686.5386 8476.291 -7685.54 8477.2881 -7685.54 8478.5186 c
f
0 Ap
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7685.6875 8478.4434 m
-7685.6875 8479.5498 -7686.5854 8480.4492 -7687.6934 8480.4492 c
-7688.8013 8480.4492 -7689.6992 8479.5498 -7689.6992 8478.4434 c
-7689.6992 8477.3359 -7688.8013 8476.4375 -7687.6934 8476.4375 c
-7686.5854 8476.4375 -7685.6875 8477.3359 -7685.6875 8478.4434 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7685.8354 8478.3672 m
-7685.8354 8479.3516 -7686.6333 8480.1484 -7687.6167 8480.1484 c
-7688.6011 8480.1484 -7689.3984 8479.3516 -7689.3984 8478.3672 c
-7689.3984 8477.3818 -7688.6011 8476.585 -7687.6167 8476.585 c
-7686.6333 8476.585 -7685.8354 8477.3818 -7685.8354 8478.3672 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7685.9829 8478.291 m
-7685.9829 8479.1504 -7686.6802 8479.8477 -7687.54 8479.8477 c
-7688.4009 8479.8477 -7689.0972 8479.1504 -7689.0972 8478.291 c
-7689.0972 8477.4297 -7688.4009 8476.7344 -7687.54 8476.7344 c
-7686.6802 8476.7344 -7685.9829 8477.4297 -7685.9829 8478.291 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7686.1313 8478.2139 m
-7686.1313 8478.9502 -7686.7275 8479.5469 -7687.4639 8479.5469 c
-7688.2002 8479.5469 -7688.7969 8478.9502 -7688.7969 8478.2139 c
-7688.7969 8477.4775 -7688.2002 8476.8809 -7687.4639 8476.8809 c
-7686.7275 8476.8809 -7686.1313 8477.4775 -7686.1313 8478.2139 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7686.2788 8478.1367 m
-7686.2788 8478.75 -7686.7749 8479.2461 -7687.3872 8479.2461 c
-7688 8479.2461 -7688.4961 8478.75 -7688.4961 8478.1367 c
-7688.4961 8477.5254 -7688 8477.0293 -7687.3872 8477.0293 c
-7686.7749 8477.0293 -7686.2788 8477.5254 -7686.2788 8478.1367 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7686.4268 8478.0605 m
-7686.4268 8478.5498 -7686.8223 8478.9453 -7687.3115 8478.9453 c
-7687.7998 8478.9453 -7688.1958 8478.5498 -7688.1958 8478.0605 c
-7688.1958 8477.5723 -7687.7998 8477.1758 -7687.3115 8477.1758 c
-7686.8223 8477.1758 -7686.4268 8477.5723 -7686.4268 8478.0605 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7686.5737 8477.9834 m
-7686.5737 8478.3496 -7686.8696 8478.6445 -7687.2344 8478.6445 c
-7687.5996 8478.6445 -7687.8955 8478.3496 -7687.8955 8477.9834 c
-7687.8955 8477.6191 -7687.5996 8477.3242 -7687.2344 8477.3242 c
-7686.8696 8477.3242 -7686.5737 8477.6191 -7686.5737 8477.9834 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7686.7217 8477.9082 m
-7686.7217 8478.1484 -7686.9175 8478.3438 -7687.1582 8478.3438 c
-7687.3989 8478.3438 -7687.5942 8478.1484 -7687.5942 8477.9082 c
-7687.5942 8477.667 -7687.3989 8477.4727 -7687.1582 8477.4727 c
-7686.9175 8477.4727 -7686.7217 8477.667 -7686.7217 8477.9082 c
f
1 Ap
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7686.8696 8477.832 m
-7686.8696 8477.9482 -7686.9648 8478.0439 -7687.0811 8478.0439 c
-7687.1987 8478.0439 -7687.2935 8477.9482 -7687.2935 8477.832 c
-7687.2935 8477.7148 -7687.1987 8477.6191 -7687.0811 8477.6191 c
-7686.9648 8477.6191 -7686.8696 8477.7148 -7686.8696 8477.832 c
f
U
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (A) XT
U
u
u
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7597.3481 8478.5186 m
-7597.3481 8480.6191 -7595.6465 8482.3223 -7593.5454 8482.3223 c
-7591.4458 8482.3223 -7589.7437 8480.6191 -7589.7437 8478.5186 c
-7589.7437 8476.4199 -7591.4458 8474.7178 -7593.5454 8474.7178 c
-7595.6465 8474.7178 -7597.3481 8476.4199 -7597.3481 8478.5186 c
f
0 Ap
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7590.3364 8478.3896 m
-7590.3364 8476.5 -7591.8315 8474.9697 -7593.6763 8474.9697 c
-7595.52 8474.9697 -7597.0161 8476.5 -7597.0161 8478.3896 c
-7597.0161 8480.2783 -7595.52 8481.8096 -7593.6763 8481.8096 c
-7591.8315 8481.8096 -7590.3364 8480.2783 -7590.3364 8478.3896 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7590.9292 8478.2578 m
-7590.9292 8476.5811 -7592.2173 8475.2217 -7593.8071 8475.2217 c
-7595.3955 8475.2217 -7596.6831 8476.5811 -7596.6831 8478.2578 c
-7596.6831 8479.9375 -7595.3955 8481.2969 -7593.8071 8481.2969 c
-7592.2173 8481.2969 -7590.9292 8479.9375 -7590.9292 8478.2578 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7591.5225 8478.1289 m
-7591.5225 8476.6621 -7592.6035 8475.4736 -7593.9375 8475.4736 c
-7595.27 8475.4736 -7596.3511 8476.6621 -7596.3511 8478.1289 c
-7596.3511 8479.5957 -7595.27 8480.7842 -7593.9375 8480.7842 c
-7592.6035 8480.7842 -7591.5225 8479.5957 -7591.5225 8478.1289 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7592.1157 8477.998 m
-7592.1157 8476.7422 -7592.9888 8475.7256 -7594.0669 8475.7256 c
-7595.1455 8475.7256 -7596.0195 8476.7422 -7596.0195 8477.998 c
-7596.0195 8479.2529 -7595.1455 8480.2705 -7594.0669 8480.2705 c
-7592.9888 8480.2705 -7592.1157 8479.2529 -7592.1157 8477.998 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7592.7085 8477.8672 m
-7592.7085 8476.8242 -7593.3755 8475.9775 -7594.1978 8475.9775 c
-7595.02 8475.9775 -7595.6875 8476.8242 -7595.6875 8477.8672 c
-7595.6875 8478.9121 -7595.02 8479.7578 -7594.1978 8479.7578 c
-7593.3755 8479.7578 -7592.7085 8478.9121 -7592.7085 8477.8672 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7593.3013 8477.7373 m
-7593.3013 8476.9033 -7593.7612 8476.2295 -7594.3276 8476.2295 c
-7594.8955 8476.2295 -7595.3545 8476.9033 -7595.3545 8477.7373 c
-7595.3545 8478.5703 -7594.8955 8479.2461 -7594.3276 8479.2461 c
-7593.7612 8479.2461 -7593.3013 8478.5703 -7593.3013 8477.7373 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7593.8955 8477.6074 m
-7593.8955 8476.9854 -7594.1475 8476.4814 -7594.4585 8476.4814 c
-7594.77 8476.4814 -7595.0225 8476.9854 -7595.0225 8477.6074 c
-7595.0225 8478.2285 -7594.77 8478.7324 -7594.4585 8478.7324 c
-7594.1475 8478.7324 -7593.8955 8478.2285 -7593.8955 8477.6074 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7594.4868 8477.4766 m
-7594.4868 8477.0664 -7594.5327 8476.7324 -7594.5894 8476.7324 c
-7594.6455 8476.7324 -7594.6899 8477.0664 -7594.6899 8477.4766 c
-7594.6899 8477.8857 -7594.6455 8478.2207 -7594.5894 8478.2207 c
-7594.5327 8478.2207 -7594.4868 8477.8857 -7594.4868 8477.4766 c
f
1 Ap
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7595.0806 8477.3457 m
-7595.0806 8477.5449 -7594.9185 8477.708 -7594.7192 8477.708 c
-7594.52 8477.708 -7594.3579 8477.5449 -7594.3579 8477.3457 c
-7594.3579 8477.1465 -7594.52 8476.9854 -7594.7192 8476.9854 c
-7594.9185 8476.9854 -7595.0806 8477.1465 -7595.0806 8477.3457 c
f
U
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (B) XT
u
0 Ap
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7585.8955 8478.5186 m
-7585.8955 8480.4023 -7584.3696 8481.9297 -7582.4868 8481.9297 c
-7580.6045 8481.9297 -7579.0776 8480.4023 -7579.0776 8478.5186 c
-7579.0776 8476.6367 -7580.6045 8475.1113 -7582.4868 8475.1113 c
-7584.3696 8475.1113 -7585.8955 8476.6367 -7585.8955 8478.5186 c
f
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7585.6099 8478.4033 m
-7585.6099 8480.0967 -7584.2642 8481.4697 -7582.6045 8481.4697 c
-7580.9438 8481.4697 -7579.5981 8480.0967 -7579.5981 8478.4033 c
-7579.5981 8476.709 -7580.9438 8475.3369 -7582.6045 8475.3369 c
-7584.2642 8475.3369 -7585.6099 8476.709 -7585.6099 8478.4033 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7585.3237 8478.2842 m
-7585.3237 8479.791 -7584.1577 8481.0098 -7582.7212 8481.0098 c
-7581.2827 8481.0098 -7580.1177 8479.791 -7580.1177 8478.2842 c
-7580.1177 8476.7813 -7581.2827 8475.5625 -7582.7212 8475.5625 c
-7584.1577 8475.5625 -7585.3237 8476.7813 -7585.3237 8478.2842 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7585.0376 8478.168 m
-7585.0376 8479.4844 -7584.0532 8480.5498 -7582.8384 8480.5498 c
-7581.6216 8480.5498 -7580.6372 8479.4844 -7580.6372 8478.168 c
-7580.6372 8476.8535 -7581.6216 8475.7891 -7582.8384 8475.7891 c
-7584.0532 8475.7891 -7585.0376 8476.8535 -7585.0376 8478.168 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7584.7515 8478.0518 m
-7584.7515 8479.1777 -7583.9468 8480.0898 -7582.9546 8480.0898 c
-7581.9614 8480.0898 -7581.1567 8479.1777 -7581.1567 8478.0518 c
-7581.1567 8476.9258 -7581.9614 8476.0146 -7582.9546 8476.0146 c
-7583.9468 8476.0146 -7584.7515 8476.9258 -7584.7515 8478.0518 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7584.4653 8477.9346 m
-7584.4653 8478.8711 -7583.8413 8479.6309 -7583.0718 8479.6309 c
-7582.3013 8479.6309 -7581.6772 8478.8711 -7581.6772 8477.9346 c
-7581.6772 8476.999 -7582.3013 8476.2402 -7583.0718 8476.2402 c
-7583.8413 8476.2402 -7584.4653 8476.999 -7584.4653 8477.9346 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7584.1792 8477.8184 m
-7584.1792 8478.5645 -7583.7358 8479.1689 -7583.1885 8479.1689 c
-7582.6411 8479.1689 -7582.1968 8478.5645 -7582.1968 8477.8184 c
-7582.1968 8477.0723 -7582.6411 8476.4668 -7583.1885 8476.4668 c
-7583.7358 8476.4668 -7584.1792 8477.0723 -7584.1792 8477.8184 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7583.8931 8477.7002 m
-7583.8931 8478.0762 -7583.6304 8478.3809 -7583.3052 8478.3809 c
-7582.9814 8478.3809 -7582.7173 8478.0762 -7582.7173 8477.7002 c
-7582.7173 8477.3262 -7582.9814 8477.0225 -7583.3052 8477.0225 c
-7583.6304 8477.0225 -7583.8931 8477.3262 -7583.8931 8477.7002 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7583.6079 8477.584 m
-7583.6079 8477.9521 -7583.5239 8478.252 -7583.4224 8478.252 c
-7583.3198 8478.252 -7583.2368 8477.9521 -7583.2368 8477.584 c
-7583.2368 8477.2158 -7583.3198 8476.918 -7583.4224 8476.918 c
-7583.5239 8476.918 -7583.6079 8477.2158 -7583.6079 8477.584 c
f
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7583.3208 8477.4668 m
-7583.3208 8477.2891 -7583.4185 8477.1445 -7583.5396 8477.1445 c
-7583.6597 8477.1445 -7583.7573 8477.2891 -7583.7573 8477.4668 c
-7583.7573 8477.6465 -7583.6597 8477.792 -7583.5396 8477.792 c
-7583.4185 8477.792 -7583.3208 8477.6465 -7583.3208 8477.4668 c
f
U
u
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7574.4438 8478.5186 m
-7574.4438 8480.1855 -7573.0942 8481.5352 -7571.4282 8481.5352 c
-7569.7622 8481.5352 -7568.4116 8480.1855 -7568.4116 8478.5186 c
-7568.4116 8476.8535 -7569.7622 8475.5039 -7571.4282 8475.5039 c
-7573.0942 8475.5039 -7574.4438 8476.8535 -7574.4438 8478.5186 c
f
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7574.2036 8478.416 m
-7574.2036 8479.9141 -7573.0073 8481.1289 -7571.5317 8481.1289 c
-7570.0552 8481.1289 -7568.8589 8479.9141 -7568.8589 8478.416 c
-7568.8589 8476.918 -7570.0552 8475.7041 -7571.5317 8475.7041 c
-7573.0073 8475.7041 -7574.2036 8476.918 -7574.2036 8478.416 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7573.9634 8478.3125 m
-7573.9634 8479.6445 -7572.9204 8480.7227 -7571.6353 8480.7227 c
-7570.3481 8480.7227 -7569.3052 8479.6445 -7569.3052 8478.3125 c
-7569.3052 8476.9824 -7570.3481 8475.9033 -7571.6353 8475.9033 c
-7572.9204 8475.9033 -7573.9634 8476.9824 -7573.9634 8478.3125 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7573.7241 8478.209 m
-7573.7241 8479.373 -7572.8354 8480.3164 -7571.7388 8480.3164 c
-7570.6411 8480.3164 -7569.7524 8479.373 -7569.7524 8478.209 c
-7569.7524 8477.0469 -7570.6411 8476.1025 -7571.7388 8476.1025 c
-7572.8354 8476.1025 -7573.7241 8477.0469 -7573.7241 8478.209 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7573.4839 8478.1055 m
-7573.4839 8479.1016 -7572.7485 8479.9082 -7571.8423 8479.9082 c
-7570.9341 8479.9082 -7570.1997 8479.1016 -7570.1997 8478.1055 c
-7570.1997 8477.1094 -7570.9341 8476.3018 -7571.8423 8476.3018 c
-7572.7485 8476.3018 -7573.4839 8477.1094 -7573.4839 8478.1055 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7573.2446 8478.002 m
-7573.2446 8478.8311 -7572.6626 8479.502 -7571.9458 8479.502 c
-7571.2285 8479.502 -7570.6465 8478.8311 -7570.6465 8478.002 c
-7570.6465 8477.1738 -7571.2285 8476.5039 -7571.9458 8476.5039 c
-7572.6626 8476.5039 -7573.2446 8477.1738 -7573.2446 8478.002 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7573.0044 8477.8984 m
-7573.0044 8478.5605 -7572.5767 8479.0957 -7572.0483 8479.0957 c
-7571.5215 8479.0957 -7571.0923 8478.5605 -7571.0923 8477.8984 c
-7571.0923 8477.2383 -7571.5215 8476.7031 -7572.0483 8476.7031 c
-7572.5767 8476.7031 -7573.0044 8477.2383 -7573.0044 8477.8984 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7572.7642 8477.7959 m
-7572.7642 8477.9238 -7572.4907 8478.0293 -7572.1519 8478.0293 c
-7571.8145 8478.0293 -7571.5396 8477.9238 -7571.5396 8477.7959 c
-7571.5396 8477.668 -7571.8145 8477.5625 -7572.1519 8477.5625 c
-7572.4907 8477.5625 -7572.7642 8477.668 -7572.7642 8477.7959 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7572.5239 8477.6924 m
-7572.5239 8478.0176 -7572.4038 8478.2832 -7572.2554 8478.2832 c
-7572.1069 8478.2832 -7571.9868 8478.0176 -7571.9868 8477.6924 c
-7571.9868 8477.3672 -7572.1069 8477.1025 -7572.2554 8477.1025 c
-7572.4038 8477.1025 -7572.5239 8477.3672 -7572.5239 8477.6924 c
f
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7572.2837 8477.5889 m
-7572.2837 8477.4316 -7572.3179 8477.3018 -7572.3589 8477.3018 c
-7572.3999 8477.3018 -7572.4341 8477.4316 -7572.4341 8477.5889 c
-7572.4341 8477.748 -7572.3999 8477.876 -7572.3589 8477.876 c
-7572.3179 8477.876 -7572.2837 8477.748 -7572.2837 8477.5889 c
f
U
u
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7562.9917 8478.5186 m
-7562.9917 8479.9688 -7561.8179 8481.1426 -7560.3696 8481.1426 c
-7558.9204 8481.1426 -7557.7466 8479.9688 -7557.7466 8478.5186 c
-7557.7466 8477.0703 -7558.9204 8475.8975 -7560.3696 8475.8975 c
-7561.8179 8475.8975 -7562.9917 8477.0703 -7562.9917 8478.5186 c
f
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7562.7974 8478.4297 m
-7562.7974 8479.7324 -7561.7505 8480.7891 -7560.4595 8480.7891 c
-7559.1665 8480.7891 -7558.1196 8479.7324 -7558.1196 8478.4297 c
-7558.1196 8477.127 -7559.1665 8476.0703 -7560.4595 8476.0703 c
-7561.7505 8476.0703 -7562.7974 8477.127 -7562.7974 8478.4297 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7562.6045 8478.3398 m
-7562.6045 8479.498 -7561.6841 8480.4346 -7560.5493 8480.4346 c
-7559.4136 8480.4346 -7558.4937 8479.498 -7558.4937 8478.3398 c
-7558.4937 8477.1826 -7559.4136 8476.2441 -7560.5493 8476.2441 c
-7561.6841 8476.2441 -7562.6045 8477.1826 -7562.6045 8478.3398 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7562.4106 8478.25 m
-7562.4106 8479.2617 -7561.6177 8480.082 -7560.6392 8480.082 c
-7559.6606 8480.082 -7558.8677 8479.2617 -7558.8677 8478.25 c
-7558.8677 8477.2383 -7559.6606 8476.4189 -7560.6392 8476.4189 c
-7561.6177 8476.4189 -7562.4106 8477.2383 -7562.4106 8478.25 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7562.2163 8478.1602 m
-7562.2163 8479.0254 -7561.5513 8479.7285 -7560.7295 8479.7285 c
-7559.9067 8479.7285 -7559.2407 8479.0254 -7559.2407 8478.1602 c
-7559.2407 8477.293 -7559.9067 8476.5918 -7560.7295 8476.5918 c
-7561.5513 8476.5918 -7562.2163 8477.293 -7562.2163 8478.1602 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7562.0229 8478.0703 m
-7562.0229 8478.791 -7561.4839 8479.375 -7560.8188 8479.375 c
-7560.1538 8479.375 -7559.6157 8478.791 -7559.6157 8478.0703 c
-7559.6157 8477.3496 -7560.1538 8476.7656 -7560.8188 8476.7656 c
-7561.4839 8476.7656 -7562.0229 8477.3496 -7562.0229 8478.0703 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7561.8286 8477.9805 m
-7561.8286 8478.5537 -7561.4165 8479.0205 -7560.9087 8479.0205 c
-7560.4009 8479.0205 -7559.9888 8478.5537 -7559.9888 8477.9805 c
-7559.9888 8477.4063 -7560.4009 8476.9395 -7560.9087 8476.9395 c
-7561.4165 8476.9395 -7561.8286 8477.4063 -7561.8286 8477.9805 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7561.6353 8477.8906 m
-7561.6353 8477.7705 -7561.3501 8477.6758 -7560.9985 8477.6758 c
-7560.6475 8477.6758 -7560.3618 8477.7705 -7560.3618 8477.8906 c
-7560.3618 8478.0078 -7560.6475 8478.1025 -7560.9985 8478.1025 c
-7561.3501 8478.1025 -7561.6353 8478.0078 -7561.6353 8477.8906 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7561.4419 8477.8008 m
-7561.4419 8478.084 -7561.2837 8478.3135 -7561.0884 8478.3135 c
-7560.8945 8478.3135 -7560.7368 8478.084 -7560.7368 8477.8008 c
-7560.7368 8477.5166 -7560.8945 8477.2871 -7561.0884 8477.2871 c
-7561.2837 8477.2871 -7561.4419 8477.5166 -7561.4419 8477.8008 c
f
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7561.2476 8477.7109 m
-7561.2476 8477.5723 -7561.2173 8477.4609 -7561.1792 8477.4609 c
-7561.1411 8477.4609 -7561.1099 8477.5723 -7561.1099 8477.7109 c
-7561.1099 8477.8477 -7561.1411 8477.96 -7561.1792 8477.96 c
-7561.2173 8477.96 -7561.2476 8477.8477 -7561.2476 8477.7109 c
f
U
u
1 Ap
0.784909 0.943603 0.343206 0.271733 0.290196 0.156863 0.352941 Xa
-7551.5396 8478.5186 m
-7551.5396 8479.752 -7550.5415 8480.75 -7549.3115 8480.75 c
-7548.0786 8480.75 -7547.0806 8479.752 -7547.0806 8478.5186 c
-7547.0806 8477.2881 -7548.0786 8476.291 -7549.3115 8476.291 c
-7550.5415 8476.291 -7551.5396 8477.2881 -7551.5396 8478.5186 c
f
0 Ap
0.770748 0.856626 0.326513 0.2056 0.309804 0.223529 0.4 Xa
-7551.3921 8478.4434 m
-7551.3921 8479.5498 -7550.4946 8480.4492 -7549.3872 8480.4492 c
-7548.2788 8480.4492 -7547.3813 8479.5498 -7547.3813 8478.4434 c
-7547.3813 8477.3359 -7548.2788 8476.4375 -7549.3872 8476.4375 c
-7550.4946 8476.4375 -7551.3921 8477.3359 -7551.3921 8478.4434 c
f
0.74902 0.768002 0.307927 0.149447 0.329412 0.286275 0.447059 Xa
-7551.2446 8478.3672 m
-7551.2446 8479.3516 -7550.4468 8480.1484 -7549.4634 8480.1484 c
-7548.4795 8480.1484 -7547.6821 8479.3516 -7547.6821 8478.3672 c
-7547.6821 8477.3818 -7548.4795 8476.585 -7549.4634 8476.585 c
-7550.4468 8476.585 -7551.2446 8477.3818 -7551.2446 8478.3672 c
f
0.730343 0.674983 0.286107 0.098207 0.345098 0.34902 0.498039 Xa
-7551.0972 8478.291 m
-7551.0972 8479.1504 -7550.3999 8479.8477 -7549.5396 8479.8477 c
-7548.6792 8479.8477 -7547.9829 8479.1504 -7547.9829 8478.291 c
-7547.9829 8477.4297 -7548.6792 8476.7344 -7549.5396 8476.7344 c
-7550.3999 8476.7344 -7551.0972 8477.4297 -7551.0972 8478.291 c
f
0.706355 0.591241 0.255985 0.053925 0.364706 0.407843 0.552941 Xa
-7550.9487 8478.2139 m
-7550.9487 8478.9502 -7550.3521 8479.5469 -7549.6157 8479.5469 c
-7548.8794 8479.5469 -7548.2837 8478.9502 -7548.2837 8478.2139 c
-7548.2837 8477.4775 -7548.8794 8476.8809 -7549.6157 8476.8809 c
-7550.3521 8476.8809 -7550.9487 8477.4775 -7550.9487 8478.2139 c
f
0.674769 0.490669 0.218662 0.018524 0.384314 0.47451 0.615686 Xa
-7550.8013 8478.1367 m
-7550.8013 8478.75 -7550.3052 8479.2461 -7549.6929 8479.2461 c
-7549.0806 8479.2461 -7548.5845 8478.75 -7548.5845 8478.1367 c
-7548.5845 8477.5254 -7549.0806 8477.0293 -7549.6929 8477.0293 c
-7550.3052 8477.0293 -7550.8013 8477.5254 -7550.8013 8478.1367 c
f
0.64123 0.384558 0.172763 0.003479 0.4 0.545098 0.686275 Xa
-7550.6528 8478.0605 m
-7550.6528 8478.5498 -7550.2583 8478.9453 -7549.7695 8478.9453 c
-7549.2798 8478.9453 -7548.8843 8478.5498 -7548.8843 8478.0605 c
-7548.8843 8477.5723 -7549.2798 8477.1758 -7549.7695 8477.1758 c
-7550.2583 8477.1758 -7550.6528 8477.5723 -7550.6528 8478.0605 c
f
0.596033 0.266423 0.124788 0.000031 0.415686 0.623529 0.760784 Xa
-7550.5063 8477.9834 m
-7550.5063 8478.3496 -7550.2104 8478.6445 -7549.8462 8478.6445 c
-7549.4814 8478.6445 -7549.1851 8478.3496 -7549.1851 8477.9834 c
-7549.1851 8477.6191 -7549.4814 8477.3242 -7549.8462 8477.3242 c
-7550.2104 8477.3242 -7550.5063 8477.6191 -7550.5063 8477.9834 c
f
0.547051 0.146303 0.061738 0.000031 0.427451 0.701961 0.843137 Xa
-7550.3579 8477.9082 m
-7550.3579 8478.1484 -7550.1626 8478.3438 -7549.9224 8478.3438 c
-7549.6812 8478.3438 -7549.4858 8478.1484 -7549.4858 8477.9082 c
-7549.4858 8477.667 -7549.6812 8477.4727 -7549.9224 8477.4727 c
-7550.1626 8477.4727 -7550.3579 8477.667 -7550.3579 8477.9082 c
f
1 Ap
0.492195 0.014221 0.001282 0.000031 0.443137 0.803922 0.956863 Xa
-7550.2104 8477.832 m
-7550.2104 8477.9482 -7550.1157 8478.0439 -7549.9985 8478.0439 c
-7549.8813 8478.0439 -7549.7866 8477.9482 -7549.7866 8477.832 c
-7549.7866 8477.7148 -7549.8813 8477.6191 -7549.9985 8477.6191 c
-7550.1157 8477.6191 -7550.2104 8477.7148 -7550.2104 8477.832 c
f
U
/ShapeBlendPathType (K) XT
/ShapeBlendPathID (A) XT
U
0 Ap
-7604.3306 8478.4727 m
-7604.3306 8479.8008 -7610.7075 8481.2813 -7619.8589 8481.2813 c
-7629.0103 8481.2813 -7635.3892 8479.8008 -7635.3892 8478.4727 C
-7635.8843 8478.4727 L
-7635.8843 8480.6191 -7627.6284 8481.7773 -7619.8589 8481.7773 c
-7612.0903 8481.7773 -7602.1138 8480.6191 -7602.1138 8478.4727 C
-7604.3306 8478.4727 L
f
-7630.3296 8465.4023 m
-7629.0415 8466.6914 L
-7628.6772 8466.3281 -7628.2485 8465.6641 -7625.4966 8467.5234 c
-7622.9946 8469.2129 -7619.9814 8471.7793 -7617.0122 8474.748 c
-7614.0435 8477.7168 -7611.4771 8480.7305 -7609.7856 8483.2314 c
-7607.9272 8485.9834 -7607.6548 8487.3516 -7608.0161 8487.7148 C
-7607.6665 8488.0654 L
-7606.1489 8486.5469 -7611.1685 8479.8906 -7616.6626 8474.3984 c
-7619.6519 8471.4063 -7622.6919 8468.8193 -7625.2192 8467.1113 c
-7627.9204 8465.2871 -7629.6392 8464.7129 -7630.3296 8465.4023 C
f
-7607.2695 8466.1689 m
-7606.9067 8466.5322 -7607.1802 8467.9004 -7609.0396 8470.6514 c
-7610.7295 8473.1543 -7613.2954 8476.168 -7616.2642 8479.1367 c
-7622.7358 8485.6094 -7627.5884 8488.3682 -7628.5278 8487.4277 C
-7629.5815 8488.4824 L
-7628.0649 8490 -7619.5298 8483.1025 -7615.9146 8479.4863 c
-7612.9243 8476.4971 -7610.3364 8473.457 -7608.6294 8470.9297 c
-7606.8042 8468.2285 -7606.2295 8466.5098 -7606.9185 8465.8193 C
-7607.2695 8466.1689 L
f
U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -
( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -
(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -
(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -
( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -
(OnPath Brush Tool/ Text Divider/ Adobe ArtOnPath Brush Tool/ T) -
(apered Stroke/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt. Round)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. Oval)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. Round)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Flat)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. Oval)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. Round)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Charcoal)
(1 / Unnamed Brush Pat 2/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Tapered Stroke)
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(Text Divider)
(1 / Unnamed Brush Pattern 6/ / / / / 5 0.176471 0.027451 0.247) -
(059 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
0.75021 0.679683 0.670222 0.90164 ([Registration]) 0 Xs
([Registration])
Pc
0.000031 0.000031 0.000031 0.000031 1 1 1 Xa
(White)
Pc
Bb
2 (New Gradient Swatch 1) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 1)
Pc
Bb
2 (New Gradient Swatch 2) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(New Gradient Swatch 2)
Pc
0.057008 0.040894 0.041199 0.000031 0.929412 0.929412 0.929412 Xa
(R=237 G=237 B=237 1)
Pc
0.67718 0.608667 0.59826 0.476326 0.247059 0.247059 0.247059 Xa
(R=63 G=63 B=63 1)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(Layer 1) Ln
0 A
1 Ap
0 O
0.057008 0.040894 0.041199 0.000031 0.929412 0.929412 0.929412 Xa
0 J 0 j 1 w 4 M []0 d0 XR
1000.4941 -128.3555 m
0.495117 -128.3555 L
0.495117 477.0967 L
1000.4941 477.0967 L
1000.4941 -128.3555 L
f
1000.4941 88.3398 m
0.495117 88.3398 L
0.495117 728.0088 L
1000.4941 728.0088 L
1000.4941 88.3398 L
Bb
1 (Unnamed gradient 6) 3.70654 92.8467 32.4045 1171.3219 1 0 0 1 0 0 Bg
988.9302 627.7038 578.7416 -911.7916 -285.665 548.7437 Xm
6503.3911 4127.8984 578.7416 -911.7916 -6789.0562 -3579.1543 Bc
283.3777 179.8683 578.7416 -911.7916 -285.665 548.7437 Bm
705.5526 447.8355 578.7416 -911.7916 -2.2876 728.6118 Bm
6503.3911 4127.8984 578.7416 -911.7916 703.2656 1176.4473 Bc
f
0 BB
0 Ap
811.9727 556.0259 m
806.915 575.4736 787.543 566.0029 780.3291 563.9902 c
773.1172 561.9756 764.5645 564.665 761.0938 564.9189 c
757.624 565.1768 750.2656 589.9385 749.498 598.1172 c
748.7275 606.2949 743.8232 616.6089 744.334 605.2764 C
741.6621 614.0503 732.6367 625.8687 716.1436 632.2012 C
702.0449 645.8232 652.1162 691.2798 Y
652.1982 686.5547 665.3867 670.7139 V
653.416 679.8008 650.1924 686.0547 650.835 683.3809 c
653.5498 672.0854 662.334 664.9883 664.8652 664.4028 C
662.0479 663.251 653.5693 670.8252 V
653.3535 664.835 664.1104 653.3618 667.9023 652.7959 C
661.5879 653.4219 654.8613 659.8193 V
655.5029 649.9063 666.166 643.7881 669.1504 644.3115 C
663.4453 643.1641 659.6064 646.458 V
659.0811 640.3555 666.084 636.2754 670.0869 635.5063 C
662.3154 635.582 663.1992 633.0752 673.1416 628.8364 C
662.4023 630.542 669.6143 626.4648 675.5859 621.1074 C
665.8613 624.7202 674.4121 616.0459 683.8008 607.5957 C
675.9893 609.7715 684.7725 599.8398 687.5352 597.9976 C
682.2881 597.6973 687.6895 588.9668 691.3057 586.5093 C
673.3428 568.3457 677.8184 540.0693 V
650.7051 516.7061 653.4873 513.6035 657.8906 514.1006 C
647.7373 505.9438 644.0693 499.3691 648.6807 500.0791 C
640.6494 490.6992 639.4707 485.8467 645.75 487.2148 C
636.6758 477.3999 632.9063 464.5205 641.1748 472.4326 c
649.4395 480.3506 651.0879 482.0571 Y
659.6807 483.2539 676.2305 498.0322 V
680.4521 496.8438 693.5752 503.3711 694.3818 505.0645 C
699.2256 502.3521 700.6211 501.291 703.625 501.6074 C
706.0059 498.3877 709.5137 495.8267 708.7061 495.3486 c
707.6514 494.7217 708.1748 490.4707 705.9268 489.8516 c
703.6807 489.231 701.3096 491.6274 702.4971 493.4727 c
703.6855 495.3164 708.5 493.8467 707.2949 494.5122 c
706.0967 495.1787 706.2412 495.7402 702.5479 495.0713 c
698.8555 494.4033 696.6709 491.6802 700.958 485.332 C
695.2412 484.2271 698.2949 485.416 695.6992 487.6328 C
696.1123 486.9297 694.4668 480.4863 705.6162 483.9639 C
714.9258 485.5869 721.1338 490.5049 715.209 494.6445 c
711.3379 497.3472 710.2031 500.4648 709.8799 502.3071 C
710.1709 502.4624 710.5723 502.604 711.124 502.7285 C
719.0947 503.4946 739.3867 508.1494 746.4932 510.2666 c
753.5986 512.3828 760.6201 519.3311 774.6738 526.5039 c
788.7305 533.6772 796.2197 543.8887 Y
797.2686 543.9072 803.3066 547.0557 805.3838 548.4565 c
807.4561 549.8584 810.3066 549.2759 814.2949 549.3447 c
818.2881 549.4131 820.2979 548.2935 Y
820.8896 550.7178 811.9727 556.0259 V
Bb
1 (Unnamed gradient 305) 730.5244 501.3149 103.8972 199.8504 1 0 0 1 0 0 Bg
-48.0001 194.0004 201.1191 49.7614 628.0176 475.9521 Xm
-2026.3514 8189.8364 201.1191 49.7614 2654.0889 -7712.75 Bc
-47.7194 192.8659 201.1191 49.7614 627.7373 477.0864 Bm
-2026.3514 8189.8364 201.1191 49.7614 580.0176 669.9521 Bc
f
0 BB
/BBAccumRotation (0.017183) XT
572.5791 544.6455 m
581.4336 556.4365 593.9805 569.8018 604.4727 568.2109 c
617.5547 566.2236 617.6025 555.8086 618.6904 553.4199 C
620.2793 551.0996 622.8301 549.165 625.5439 544.2129 C
618.9766 545.8462 616.6709 547.811 612.3867 543.9219 c
605.6084 539.688 604.6289 528.3877 v
603.6484 517.085 603.4512 470.6152 577.0273 454.2832 C
569.083 436.4375 557.0986 423.957 551.499 420.3945 C
556.7646 419.0049 558.7695 415.4741 V
562.8516 413.5 567.0254 409.0005 563.9346 401.9736 c
560.8389 394.9512 552.4502 387.7021 547.0615 391.7813 C
550.9443 393.0781 555.6416 393.9795 554.6387 399.4253 c
553.6357 404.8691 548.3145 394.9624 547.0898 397.1172 c
545.082 400.6455 557.6143 403.6406 554.5303 413.1157 C
550.7744 416.4043 548.8438 413.8535 546.1494 415.0039 c
540.8799 411.4863 536.3584 412.3838 V
543.4688 404.9917 544.8096 402.6382 542.8301 398.5586 c
540.8564 394.4795 535.2383 380.002 526.625 385.4126 C
529.7246 386.8545 532.3604 385.5264 533.8125 391.5625 c
535.2686 397.6016 536.7598 400.2607 532.6445 402.4844 C
528.7725 395.6055 525.3027 391.3208 521.9443 395.4277 C
525.5371 395.1602 531.5781 401.0703 530.5898 410.0679 C
517.0967 404.8252 507.2939 407.1973 v
497.4922 409.5674 501.8486 407.4629 491.3125 405.332 c
480.7725 403.2031 481.5059 388.0752 461.8555 383.3398 c
433.6504 354.7505 419.3164 370.3691 v
415.1738 375.8887 425.7637 380.0566 V
409.1904 375.0645 411.6465 381.8345 414.4004 383.9053 C
406.8682 384.5601 403.7813 392.2559 411.3926 398.3784 C
399.9551 405.2617 405.5205 409.0762 416.5713 409.9219 c
427.6211 410.7676 466.5332 418.1592 479.7236 430.4697 C
508.7139 463.2275 510.5693 474.3091 V
474.9746 477.187 486.3848 482.8203 491.1787 484.835 C
469.3232 483.8525 474.1572 492.9785 482.7783 491.7983 C
459.0039 497.3179 465.3945 500.0615 473.8691 502.4155 C
451.1416 507.7422 444.6289 514.4585 460.9453 515.1846 C
444.2852 520.6694 429.4395 528.9453 443.293 531.5313 C
418.75 543.8857 418.0645 548.8652 428.6621 549.3115 C
412.0508 555.6504 404.8945 565.8325 419.6299 563.2944 C
395.9834 575.2627 393.2188 581.8203 403.502 580.8677 C
383.8887 594.2393 385.5166 597.1699 393.6885 595.5879 C
375.1455 613.5049 375.2539 611.4893 386.5166 612.0264 C
360 627.6602 379.3232 623.7251 V
358.4209 639.1167 363.8652 637.6675 372.4893 636.4873 c
340.8467 658.0122 368.1348 647.8159 V
334.3682 671.8398 349.4736 670.877 363.25 659.3262 C
339.2979 683.9419 337.1445 694.0488 362.9502 670.7031 C
337.1982 704.7178 346.5762 702.9634 367.4512 674.877 C
351.7119 706.209 352.3672 708.8379 376.0059 671.7417 C
387.5918 655.8281 414.3965 627.0352 423.8262 621.2266 c
448.0742 599.9541 471.3662 593.0112 V
463.6445 599.3076 450.7207 605.3105 470.1826 600.376 C
442.1309 622.2285 450.4404 617.1982 473.2803 612.3086 C
460.4414 622.3564 454.2832 629.6191 454.6016 632.6621 C
454.9473 635.9565 475.1299 623.3926 478.1787 625.8438 C
466.3027 637.9448 457.584 649.167 457.458 653.4419 C
457.3252 657.7739 485.5293 636.332 492.5645 639.332 C
478.2656 655.2197 471.6748 666.1006 470.7178 670.1592 C
469.2744 676.3052 491.0303 655.3613 511.6699 646.7861 C
496.3281 667.8896 488.2402 679.6025 490.2979 680.3018 C
492.3564 681.002 505.208 665.4365 521.832 652.8398 C
515.4922 674.2974 518.3799 682.8184 529.252 657.3286 C
533.0771 640.6006 547.666 613.9321 564.4277 595.4326 C
569.6123 579.9038 565.2393 550.875 572.2109 544.4766 C
572.5791 544.6455 L
Bb
1 (New Gradient Swatch 1) 513.9434 388.4316 97.3264 275.9851 1 0 0 1 0 0 Bg
-35.1941 273.7319 274.2657 35.2627 371.1504 370.0728 Xm
-1049.6453 8163.9097 274.2657 35.2627 1420.5898 -7792.2363 Bc
-34.9883 272.1311 274.2657 35.2627 370.9443 371.6733 Bm
-1049.6453 8163.9097 274.2657 35.2627 335.9561 643.8047 Bc
f
0 BB
/BBAccumRotation (0.136947) XT
926.5879 288.7627 m
969.3311 272.7393 981.3652 283.7129 Y
913.832 289.8184 895.9307 323.7725 881.5664 325.1846 c
856.707 327.626 849.1016 334.1245 831.6699 342.0962 c
814.2324 350.0693 782.209 345.6777 Y
787.9189 348.5313 806.5283 353.5342 811.8701 354.7061 C
812.3633 356.9512 797.376 363.2031 Y
797.043 366.8076 793.7266 372.2461 v
781.1865 392.8203 733.4063 372.6416 717.3408 371.4854 c
707.0273 370.8252 693.8184 374.9209 672.876 361.9048 C
651.8008 363.6226 631.3125 347.5664 Y
581.5576 323.5977 570.9863 290.1133 V
568.7764 286.8994 566.3096 283.7734 563.6357 280.2695 c
559.2236 274.459 550.7617 272.3721 547.7031 267.084 C
541.3496 263.4199 525.0986 244.626 518.584 237.8574 c
512.0645 231.0957 499.7754 224.1924 492.125 219.0078 c
487.3145 215.7451 494.8047 212.8467 500.8242 217.8984 C
508.7275 214.8936 517.165 222.9365 Y
515.9697 225.6738 525.4375 222.0264 v
534.9023 218.3682 546.125 228.1572 Y
547.0479 228.7148 559.8916 227.1035 563.5889 235.8779 c
567.4805 245.1172 573.8525 252.791 576.8047 256.0566 C
577.7168 256.7754 578.7715 257.6934 579.9824 258.7256 C
591.5781 265.8418 L
592.3359 266.4424 593.4844 267.3691 V
597.3281 268.9678 601.8594 270.1758 607.2275 270.5459 C
595.126 250.2803 608.8496 258.7178 V
608.7324 242.8613 607.4902 244.9004 619.8457 250.9922 C
614.5137 234.5254 619.9121 235.9785 629.8486 242.6045 C
628.2441 220.0195 634.3242 228.3809 638.8604 233.5547 C
639.3633 216.6797 642.1563 217.8271 650.4766 224.8105 C
653.2158 206.5605 655.2031 207.8857 665.8779 217.877 C
666.8213 199.1406 671.042 199.0908 681.2871 210.9414 C
685.0225 193.3545 686.5107 188.6123 702.7158 204.4424 C
709.7412 182.5938 709.9248 183.4355 725.1387 198.6025 C
743.0313 176.1191 742.4111 177.1387 746.1924 190.4189 C
763.4688 168.9541 764.5205 177.5449 762.7158 188.5322 C
780.918 171.2734 789.6768 164.9248 782.4014 189.4727 C
810.3594 166.5273 813.1523 167.6758 810.9697 188.4512 C
842.0938 168.3359 849.9814 165.71 830.7158 197.3203 C
886.252 161.2227 876.251 169.6084 838.5889 229.1045 C
862.9443 205.1934 880.5264 188.9561 899.4063 190.0762 C
874.1797 217.7109 813.9951 274.2529 813.4971 279.6572 c
812.999 285.0605 857.1523 228.999 903.9893 214.6484 c
949.8584 200.5938 897.7979 231.6992 897.1133 236.2617 C
898.2285 241.3086 916.6396 225.7129 924.5283 222.0352 c
934.5742 217.3516 937.667 219.4795 938.9932 219.9365 C
942.9727 221.3105 905.7266 246.9219 910.4443 252.7842 C
931.4697 237.2119 959.0635 234.6514 959.7832 235.5586 c
961.3936 237.5859 948.3027 243.9277 943.2891 246.8389 c
930.6807 254.1621 906.4277 276.751 928.749 265.3467 c
951.0703 253.9414 975.6221 252.6328 973.8428 254.791 c
972.0645 256.9502 956.6523 263.8848 Y
952.1836 266.0635 892.1719 301.665 926.5879 288.7627 c
Bb
1 (Unnamed gradient 305) 738.4678 195.5273 92.6026 176.1821 1 0 0 1 0 0 Bg
-8.00002 176.0004 500.1111 22.7323 486.7515 184.0859 Xm
-384.7597 8464.709 500.1111 22.7323 871.4639 -8279.5938 Bc
-7.95324 174.9712 500.1111 22.7323 486.7046 185.1152 Bm
-384.7597 8464.709 500.1111 22.7323 478.7515 360.0864 Bc
f
0 BB
*u
1 D
0 g
934.7422 460.3223 m
930.1904 472.1987 915.4395 464.1133 910.1807 463.812 c
906.0098 463.5713 906.96 475.0576 909.7188 479.1768 C
914.5459 485.3506 914.2178 490.5068 v
913.8838 495.665 910.0176 497.7188 907.707 499.8062 c
904.2783 502.9072 889.1797 512.5713 895.3418 501.5571 C
882.9736 505.3691 872.6641 507.1162 866.8242 507.8164 c
837.4785 511.3452 805.2305 505.6445 795.3027 499.0635 c
791.1699 496.3242 808.0234 500.0625 813.1787 499.3613 C
808.0166 497.6563 793.2246 492.5376 v
778.4287 487.4189 801.8115 489.4209 804.5586 489.7578 C
786.6689 483.2734 790.7881 481.5449 803.168 483.2305 C
794.2207 479.1289 787.6719 472.957 813.8145 479.4219 C
803.4902 474.9805 803.1406 471.8867 832.7139 476.9673 C
825.1445 473.2061 841.2949 471.7891 Y
843.7305 470.9976 833.3672 461.5918 846.4043 453.5576 C
845.4961 453.2441 L
839.168 446.7007 828.4277 449.9546 Y
823.2832 448.5464 817.8613 449.5049 v
814.0059 450.1875 812.4199 444.8662 812.0576 444.6455 C
806.5518 442.6758 806.291 438.166 v
806.0313 433.6533 805.2217 434.7705 Y
800.8311 433.4561 800.5957 429.6978 V
797.7148 428.5947 797.5107 425.0225 799.5303 426.0898 c
802.7393 427.7871 797.3457 418.417 800.9414 419.2998 c
804.5352 420.1807 805.7227 412.9043 808.1484 414.4683 C
810.6133 414.374 832.8984 417.2656 835.6572 418.1792 c
839.7861 419.542 851.1641 424.2847 854.5781 423.6304 C
858.8906 425.8906 L
858.6953 424.6914 858.8887 423.2002 860.7041 422.2393 C
865.543 420.2617 869.2627 422.3291 868.5264 425.019 c
867.96 427.1055 869.2148 428.6992 870.3066 429.6436 C
878.2383 428.7485 888.3701 429.3154 894.1211 431.9932 c
898.2217 433.9053 898.8857 435.0889 903.6162 436.5986 c
910.9922 438.9541 913.2715 445.106 916.8223 445.6592 c
920.3857 446.2153 923.8994 453.208 931.0176 455.2637 c
934.9814 456.4082 936.043 455.9971 938.4258 455.4043 c
940.7012 454.835 941.1162 454.4048 Y
941.1748 456.7383 934.7422 460.3223 V
f
0 D
865.7227 427.3853 m
865.0361 427.3726 863.9414 424.939 862.6982 425.293 c
861.8691 425.5322 861.4512 426.5029 861.5957 427.3125 C
864.5928 428.1611 863.9619 428.5527 V
866.3916 429.8257 L
866.2207 428.3794 866.1504 427.3936 865.7227 427.3853 c
Bb
1 (Unnamed gradient 305) 876.8643 405.8013 101.7251 108.2595 1 0 0 1 0 0 Bg
-22.0001 106.0006 153.837 31.9284 796.7754 389.1792 Xm
-1738.3964 8375.9082 153.837 31.9284 2535.043 -7986.1094 Bc
-21.8715 105.3807 153.837 31.9284 796.6465 389.7993 Bm
-1738.3964 8375.9082 153.837 31.9284 774.7754 495.1802 Bc
f
0 BB
*U
*u
1 D
0 g
459.7188 308.3354 m
447.752 352.0454 397.7803 323.6309 380.5801 322.9253 c
366.9365 322.3667 360.0303 328.0444 Y
359.5342 335.064 360.5889 342.0903 v
361.6387 349.1167 355.8799 365.2876 355.9551 380.1675 c
356.0313 395.0459 361.9209 414.8213 358.1914 430.1694 C
362.7227 447.5015 359.2285 463.2017 352.8262 473.3599 C
338.4873 492.1245 331.833 488.2974 V
327.7998 483.7632 333.9697 470.1499 V
318.6445 480.0454 322.9082 488.0298 312.2139 501.0376 C
198.6162 616.6992 169.7041 614.2368 V
164.5869 613.5068 180.1143 596.5313 v
195.6367 579.5552 204.2832 572.019 200.6621 570.0454 c
197.041 568.0728 165.0684 591.3101 158.4131 587.4819 c
152.8418 584.2739 183.5039 555.4155 183.8174 550.8315 c
184.127 546.2505 164.3311 558.3315 156.7188 557.7173 c
149.1035 557.1021 170.0596 530.5249 175.083 523.6685 C
175.2207 519.981 168.0146 518.8281 163.4258 521.6099 c
160.9648 523.104 58.8301 592.9658 40.6885 589.2817 C
33.499 585.0347 95.0801 550.1582 91.167 546.5786 C
63.7275 558.7417 50.4189 563.8501 v
36.5645 569.167 14.6289 574.2373 17.8652 569.7847 c
21.084 565.3291 58.4971 548.0737 62.3594 540.4995 C
61.2949 536.5679 51.9131 540.4653 v
42.5283 544.3677 15.1104 550.1802 15.248 547.1904 c
15.3906 544.1987 45.6074 529.2007 45.6621 525.4966 C
42.1816 524.3257 23.6104 526.5913 26.3906 523.209 C
34.541 512.7876 45.3965 505.0796 V
43.2725 498.7671 43.0996 498.1104 57.832 485.0005 C
55.835 476.5435 65.957 475.5039 68.0527 471.2837 C
67.3506 467.1118 70.2646 466.4673 73.6113 463.7388 C
73.9199 459.1602 72.6885 451.478 90.3945 442.0669 C
86.7988 430.8052 90.9824 425.4604 104.334 417.644 C
103.124 403.7759 105.7441 403.0688 113.915 397.9126 C
117.2725 390.5439 120.6084 387.8154 130.2129 380.1655 C
120.5332 372.9351 125.8994 370.9302 128.2871 366.7686 C
126.2393 355.5151 133.9854 352.4429 v
141.7275 349.3696 147.6533 296.5371 188.1846 266.2109 C
185.1504 265.1328 L
179.666 263.5215 163.6621 256.5898 Y
145.9277 245.5566 L
128.8408 240.8066 111.4209 244.7168 v
99.0264 247.4961 92.5801 228.1836 91.3457 227.4043 C
72.9434 220.627 71.0146 204.1738 v
69.0801 187.7188 66.7217 191.8516 Y
52.1016 187.3848 50.4316 173.6816 V
40.7832 169.8672 39.2676 156.8398 46.0918 160.5859 c
56.9434 166.5469 72.748 177.3945 84.6621 180.3535 c
96.5879 183.3027 128.5166 188.9355 136.792 194.4668 C
144.8018 193.9414 152.6357 203.8203 162.1123 204.7148 c
173.5771 205.8047 182.7568 207.2793 193.7188 204.6309 C
201.208 202.6816 L
206.2324 194.9902 214.8955 188.6582 213.0137 187.5723 c
210.6992 186.2383 211.7158 176.9609 206.8076 175.6777 c
201.8896 174.3906 196.792 179.6816 199.4248 183.668 c
202.0703 187.6504 212.5234 184.3125 209.9268 185.7939 c
207.3232 187.2793 207.6494 188.498 199.5889 187.1465 c
191.5244 185.7979 186.6777 179.9277 195.8379 165.9746 C
183.3594 163.7285 190.0381 166.2344 184.4395 171.1348 C
185.332 169.5918 181.5576 155.5996 205.9561 162.8535 C
210.8213 163.6328 215.3008 164.8359 219.1367 166.334 C
221.002 164.9395 223.5146 164.0527 226.9688 164.2422 C
244.7207 166.999 251.9922 179.6748 245.0664 186.2871 c
242.3779 188.8516 241.2627 191.8652 241.002 194.8281 C
267.8047 193.6504 302.8633 199.3711 320.625 207.9473 c
334.4395 214.6172 336.5947 220.5508 352.6553 224.0469 C
383.6777 235.5078 403.7881 255.46 406.9971 258.584 c
418.666 269.9512 427.8184 284.6758 446.3818 290.1426 c
459.5615 294.0273 462.9307 292.4434 470.5469 290.0957 c
477.8096 287.8535 479.0684 286.25 Y
479.8145 294.7656 459.7188 308.3354 V
f
/BBAccumRotation (0.200303) XT
0 D
232.6211 188.2793 m
231.585 187.6309 231.376 184.8965 230.8281 182.2422 C
230.0186 183.4551 228.8125 184.6641 227.165 185.8477 c
226.8135 186.0996 226.5059 186.3594 226.1787 186.6133 C
228.8867 186.4961 231.252 185.7598 229.9453 186.6094 c
228.0352 187.8535 227.8721 188.875 223.8828 188.5449 C
220.1094 192.0264 218.0146 195.5898 216.8877 198.6074 C
222.8135 197.0664 L
225.2539 196.502 227.8984 196.0391 230.6934 195.6777 C
232.5342 191.6641 233.7783 189.0059 232.6211 188.2793 c
Bb
1 (Unnamed gradient 305) 272.5151 199.2422 115.2011 450.9191 1 0 0 1 0 0 Bg
-192 408 417.4322 196.4387 63.4102 100.8398 Xm
-3399.502 7223.9409 417.4322 196.4387 3461.7891 -7120.7158 Bc
-190.8772 405.614 417.4322 196.4387 62.2871 103.2256 Bm
-3399.502 7223.9409 417.4322 196.4387 -128.5903 508.8398 Bc
f
0 BB
/BBAccumRotation (0.200303) XT
*U
/BBAccumRotation (0.200303) XT
0.67718 0.608667 0.59826 0.476326 0.247059 0.247059 0.247059 Xa
817.8672 -36.3457 m
815.7207 -24.2412 803.4502 -29.082 798.9531 -29.9619 c
794.458 -30.8418 789.375 -28.7881 787.2705 -28.4648 c
785.165 -28.1426 781.874 -12.6846 781.7979 -7.66113 c
781.7256 -2.63574 779.2334 3.89063 778.9971 -3.0459 C
777.7891 2.43457 772.8574 10.0781 763.1084 14.7363 C
755.167 23.7227 726.9121 53.8555 Y
726.7344 50.9707 734.0127 40.6719 V
727.1514 46.793 725.4873 50.7617 725.749 49.0996 c
726.8594 42.0801 731.876 37.3291 733.3906 36.8496 C
731.6162 36.2832 726.8105 41.3125 V
726.3906 37.668 732.3965 30.1523 734.6797 29.625 C
730.8604 30.3115 727.0674 34.5371 V
726.9814 28.4609 733.1855 24.2158 735.0313 24.3896 C
731.498 23.9648 729.3154 26.1602 V
728.7012 22.4648 732.7744 19.6387 735.1807 18.9746 C
730.4434 19.3975 730.8594 17.8262 736.7197 14.7598 C
730.252 16.3203 734.4531 13.4844 737.8369 9.92871 C
732.082 12.6016 736.8779 6.89844 742.1943 1.29199 C
737.5352 2.99707 742.4121 -3.48438 744.0078 -4.74219 C
740.7939 -4.67188 743.666 -10.2549 745.752 -11.9297 C
733.9199 -22.1367 735.2861 -39.5977 V
717.623 -52.5361 719.1689 -54.5635 721.8789 -54.4727 C
715.2949 -58.957 712.7373 -62.7891 715.583 -62.5791 C
710.2354 -67.9102 709.2813 -70.8125 713.1738 -70.2813 C
707.1689 -75.8301 704.248 -83.502 709.6709 -79.0752 c
715.0938 -74.6475 716.1816 -73.6846 Y
721.4805 -73.3701 732.2871 -65.1572 V
734.8008 -66.0859 743.1221 -62.7383 743.6953 -61.7441 C
746.5166 -63.6328 747.3164 -64.3477 749.166 -64.3008 C
750.4609 -66.3789 752.4766 -68.1084 751.96 -68.3633 c
751.2871 -68.6934 751.4033 -71.3105 750.001 -71.5801 c
748.6025 -71.8496 747.2734 -70.2734 748.085 -69.2051 c
748.8965 -68.1377 751.7637 -69.2676 751.0615 -68.8037 c
750.3594 -68.3398 750.4766 -68.0059 748.1914 -68.2334 c
745.9082 -68.4629 744.4443 -70.0186 746.752 -74.0957 C
743.2139 -74.4941 745.1318 -73.916 743.6553 -72.4395 C
743.874 -72.8877 742.5615 -76.7383 749.5293 -75.1563 C
755.2822 -74.6152 759.3066 -71.916 755.8926 -69.1055 c
753.6621 -67.2695 753.1221 -65.3145 753.0137 -64.1758 C
753.1982 -64.0947 753.4492 -64.0273 753.792 -63.9785 C
758.6904 -63.8955 771.2881 -62.0371 775.7246 -61.0898 c
780.1602 -60.1406 784.7773 -56.2441 793.6943 -52.5488 c
802.6133 -48.8525 807.6748 -42.9863 Y
808.3154 -43.0273 812.1484 -41.3975 813.4824 -40.6426 c
814.8145 -39.8887 816.5234 -40.3809 818.96 -40.5313 c
821.3965 -40.6836 822.5703 -41.4629 Y
823.0459 -40.0137 817.8672 -36.3457 V
f
646.0879 -23.6172 m
650.918 -19.3145 657.4736 -14.6504 661.8496 -16.2451 c
667.3037 -18.2324 666.4238 -22.7188 666.6865 -23.8398 C
667.167 -24.9756 668.0967 -26.0273 668.8359 -28.3945 C
666.1504 -27.123 665.3311 -26.0781 663.1494 -27.3809 c
659.8682 -28.6133 658.4658 -33.3906 v
657.0654 -38.168 652.9561 -58.1416 640.1689 -62.8789 C
635.2041 -69.8672 628.9678 -74.1973 626.2529 -75.2441 C
628.3955 -76.2988 628.9541 -77.9912 V
630.5361 -79.1943 631.9404 -81.4922 630.0039 -84.2461 c
628.0635 -87 623.8271 -89.3916 621.8623 -87.1699 C
623.6436 -86.9482 625.7451 -86.9668 625.7842 -84.5391 c
625.8252 -82.1104 622.6777 -85.9082 622.3379 -84.877 c
621.7803 -83.1855 627.4277 -82.9824 626.9229 -78.6387 C
625.5938 -76.8984 624.541 -77.8281 623.4805 -77.0996 c
620.9102 -78.1572 619.041 -77.3789 V
621.4609 -81.1758 621.833 -82.3037 620.6279 -83.8867 c
619.4258 -85.4717 615.7539 -91.2129 612.5166 -88.1377 C
613.9756 -87.7871 614.9961 -88.5859 616.1416 -86.1152 c
617.292 -83.6445 618.1621 -82.6289 616.5869 -81.3164 C
614.3232 -83.9395 612.459 -85.4824 611.3721 -83.4238 C
612.8936 -83.8496 616.0029 -81.832 616.3584 -77.875 C
610.1016 -78.9609 606.0889 -77.0918 v
602.0791 -75.2207 603.7715 -76.5059 599.0537 -76.5088 c
594.334 -76.5107 593.3389 -83.082 584.4727 -83.417 c
569.8623 -93.2734 565.0498 -85.3096 v
563.7432 -82.5781 568.6621 -81.7012 V
561.1025 -82.4131 562.7432 -79.7148 564.1094 -79.0605 C
560.9238 -78.127 560.2617 -74.5488 564.0684 -72.5742 C
559.7432 -68.6211 562.4688 -67.4629 567.2979 -68.0566 c
572.123 -68.6514 589.5039 -68.8428 596.2461 -64.6914 C
611.5547 -53.1094 613.3145 -48.5039 V
598.252 -44.1816 603.6475 -42.7461 605.8857 -42.293 C
596.3965 -40.8223 599.2676 -37.3164 602.875 -38.5713 C
593.125 -34.1348 596.1113 -33.5088 599.9619 -33.2324 C
590.6465 -28.9707 588.4287 -25.5156 595.5078 -26.6182 C
588.8164 -22.8145 583.1465 -17.9668 589.3311 -18.0566 C
579.8438 -10.6143 579.9795 -8.41113 584.5791 -9.1377 C
577.9814 -4.9707 575.7852 0.02832 581.9043 -2.33984 C
572.7666 4.8584 572.1475 7.91797 576.4873 6.61719 C
569.2109 14.0693 570.1641 15.1895 573.543 13.8008 C
567.1201 23.1152 566.9883 22.2393 571.8809 21.4951 C
561.8291 30.5176 569.7998 27.1504 V
562.1406 35.584 564.3594 34.4883 567.9658 33.2324 c
556.2178 45.2363 567.0752 38.4844 V
554.6299 51.7451 561.0459 50.0215 565.9717 43.8594 C
557.7998 56.5254 557.749 61.0596 566.8291 48.7793 C
558.6973 65.6436 562.5791 64.0781 569.126 50.1855 C
565.0713 65.0293 565.5811 66.1016 572.5342 48.0957 C
576.1387 40.2441 585.1748 25.5352 588.7285 22.2188 c
597.3184 10.9648 606.7354 5.96094 V
603.96 9.33887 598.9209 13.041 606.8672 9.23242 C
596.6904 21.0645 599.8301 18.1797 609.2295 14.0977 C
604.5791 19.5313 602.5596 23.1904 602.96 24.4707 C
603.3945 25.8594 610.9893 18.7041 612.5127 19.4941 C
608.4521 25.7295 605.6758 31.3145 605.9902 33.1621 C
606.3086 35.0391 616.582 23.3701 619.8701 24.0508 C
615.0957 32.125 613.2021 37.3789 613.1436 39.2051 C
613.0537 41.9756 620.5986 31.0801 628.7344 25.6016 C
623.9629 36.0098 621.5 41.751 622.4463 41.873 C
623.3936 41.9941 627.5723 34.1855 633.6318 27.3242 C
632.7656 37.1055 634.7461 40.5215 637.2129 28.6133 C
637.4092 21.084 641.3721 8.34863 646.9834 -1.0625 C
647.8662 -8.19336 643.4688 -20.3027 645.915 -23.6592 C
646.0879 -23.6172 L
f
358.5039 -15.1602 m
376.6475 -18.7891 380.7656 -13.8506 Y
353.3281 -15.5117 343.9902 -3.50684 338.1455 -3.81641 c
328.0332 -4.35352 324.5713 -2.30469 317.0801 -0.271484 c
309.5879 1.76074 297.041 -1.83203 Y
299.1455 -0.394531 306.2813 2.63672 308.3438 3.40527 C
308.4004 4.29883 301.9971 5.81445 Y
301.6338 7.18164 299.958 9.07813 v
293.6211 16.252 275.7744 5.64648 269.4121 4.24805 c
265.3252 3.38086 259.7725 4.17285 252.2168 -2.08203 C
243.665 -2.67188 236.4854 -10.0703 Y
218.0889 -22.25 215.9932 -35.7656 V
215.3135 -37.1348 214.5244 -38.4834 213.6797 -39.9902 c
212.2813 -42.4893 209.0283 -43.7949 208.1396 -46.0117 C
205.8301 -47.7998 200.5205 -55.999 198.3457 -58.9902 c
196.167 -61.9805 191.6836 -65.3672 188.9512 -67.8184 c
187.2334 -69.3594 190.417 -70.0303 192.5078 -67.7285 C
195.8633 -68.415 198.7295 -64.8184 Y
198.0781 -63.835 202.0996 -64.6777 v
206.124 -65.5225 209.9961 -61.0879 Y
210.3281 -60.8184 215.5742 -60.6768 216.4971 -57.0791 c
217.4648 -53.291 219.5264 -49.9609 220.5 -48.5283 C
220.8203 -48.1963 221.1826 -47.7813 221.6035 -47.3115 C
225.793 -43.8838 L
226.0576 -43.6074 226.457 -43.1836 V
227.8965 -42.3389 229.6338 -41.6055 231.7588 -41.1445 C
228.208 -49.6631 233.166 -45.5996 V
234.1309 -51.7109 233.5029 -50.998 238.0625 -47.9209 C
236.9785 -54.5752 239.0498 -53.6953 242.6035 -50.5537 C
243.4053 -59.3418 245.3057 -55.7637 246.79 -53.502 C
248.0713 -59.9668 249.1172 -59.3594 252.0029 -56.1777 C
254.2656 -63.0391 254.9766 -62.4111 258.6152 -57.9307 C
260.1895 -65.0869 261.8838 -64.8555 265.2285 -59.6855 C
267.8496 -66.2324 268.748 -67.9688 274.2266 -60.9141 C
278.4375 -68.9043 278.458 -68.5693 283.5801 -61.8301 C
292.1846 -69.4199 291.8711 -69.0645 292.5371 -63.7285 C
300.8262 -70.9629 300.7002 -67.5947 299.2754 -63.4727 C
307.6689 -69.0332 311.583 -70.957 307.0996 -61.9414 C
319.7627 -69.1113 320.8076 -68.5039 318.6064 -60.6387 C
332.3574 -66.5303 335.6846 -67.0723 325.9482 -56.0508 C
350.499 -66.6445 345.9561 -64.0117 327.0713 -43.3496 C
338.3516 -51.1055 346.4316 -56.3115 353.9238 -54.7578 C
342.0547 -45.6211 320.3887 -31.8447 319.8438 -29.793 c
319.3008 -27.7441 334.792 -43.4912 354.1875 -45.0283 c
373.6074 -46.2314 349.7725 -40.3857 349.2061 -38.6699 C
349.3311 -36.6621 355.8799 -39.4199 360.5674 -39.71 c
365.2549 -40 366.875 -39.6953 355.3662 -30.1318 C
364.7813 -34.876 371.2598 -34.8145 372.4072 -33.0488 c
373.3916 -31.5342 369.9004 -31.4795 367.8721 -30.3037 c
363.5459 -27.7969 351.1963 -20.9814 360.8662 -24.0449 c
370.5352 -27.1084 380.4512 -26.1543 379.6006 -25.4287 c
378.752 -24.7051 372.1377 -22.9502 Y
370.207 -22.377 343.8965 -12.2383 358.5039 -15.1602 c
f
*u
1 D
980.1338 -24.8652 m
975.7031 -14.9229 963.4668 -22.5029 958.9873 -22.998 c
955.4307 -23.3926 955.7207 -13.5332 957.8926 -9.88867 C
961.7363 -4.3916 961.2217 0.000977 v
960.7031 4.39258 957.3047 5.97168 955.2373 7.65234 c
952.166 10.1465 938.8213 17.7207 944.5889 8.58594 C
933.8447 11.2832 924.9541 12.3066 919.9307 12.6406 c
894.6895 14.3232 867.3887 7.98633 859.2031 1.91016 c
855.7979 -0.618164 870.0303 3.3418 874.4678 2.97656 C
870.1348 1.28516 857.7246 -3.76172 v
845.3105 -8.80762 865.2031 -6.03516 867.5381 -5.62305 C
852.542 -11.9766 856.1416 -13.2686 866.6455 -11.2637 C
859.1846 -15.1758 853.8691 -20.748 875.917 -14.0352 C
867.2939 -18.3008 867.1357 -20.96 892.1807 -15.2734 C
885.8818 -18.832 899.75 -19.3105 Y
901.8691 -19.877 893.4365 -28.3848 904.9443 -34.6582 C
904.1826 -34.9688 L
899.0713 -40.8496 889.7451 -38.5557 Y
885.4111 -39.9922 880.7354 -39.4199 v
877.4092 -39.0127 876.2949 -43.6318 875.9971 -43.8359 C
871.3789 -45.7695 871.3604 -49.6357 v
871.3438 -53.5049 870.6025 -52.5869 Y
866.9111 -53.9102 866.8789 -57.1318 V
864.4668 -58.2061 864.4551 -61.2686 866.1328 -60.2637 c
868.7949 -58.668 864.6152 -66.9219 867.6475 -66.0039 c
870.6787 -65.0859 872.0215 -71.252 874.0254 -69.8047 C
876.1367 -69.7715 895.0508 -66.2891 897.3682 -65.3848 c
900.832 -64.0313 910.3428 -59.4619 913.292 -59.8652 C
916.874 -57.7363 L
916.7617 -58.7725 916.9932 -60.0361 918.5859 -60.7754 C
922.8135 -62.2461 925.8984 -60.3096 925.1475 -58.0449 c
924.5684 -56.2881 925.5684 -54.8682 926.46 -54.0117 C
933.2793 -54.416 941.9121 -53.4707 946.7061 -50.9219 c
950.123 -49.1006 950.6348 -48.0605 954.6123 -46.5537 c
960.8057 -44.2061 962.4756 -38.8457 965.4873 -38.2109 c
968.5049 -37.5742 971.1934 -31.4375 977.1826 -29.3574 c
980.5176 -28.1992 981.4443 -28.502 983.5068 -28.9004 c
985.4775 -29.2832 985.8525 -29.6309 Y
985.7959 -27.6348 980.1338 -24.8652 V
f
/BBAccumRotation (0.050544) XT
0 D
922.6426 -56.1494 m
922.0576 -56.1924 921.2324 -58.3213 920.1553 -58.0742 c
919.4355 -57.9092 919.0352 -57.0957 919.1211 -56.4004 C
921.6436 -55.5391 921.085 -55.2324 V
923.1035 -54.0332 L
923.0234 -55.2773 923.0098 -56.123 922.6426 -56.1494 c
f
/BBAccumRotation (0.050544) XT
*U
/BBAccumRotation (0.050544) XT
*u
1 D
160.4082 -37.4414 m
155.9941 -23.4277 140.1543 -33.2422 134.5918 -33.6816 c
130.1777 -34.0283 127.8721 -32.2734 Y
127.625 -30.0059 127.8818 -27.7168 v
128.1357 -25.4277 126.0723 -20.2598 125.915 -15.4375 c
125.7578 -10.6172 127.4229 -4.13867 126.0283 0.787109 C
127.2842 6.45703 125.9619 11.5 123.7637 14.7129 C
118.8896 20.6172 116.7803 19.2959 V
115.5293 17.7773 117.6934 13.4434 V
112.6094 16.4609 113.8916 19.0996 110.2695 23.1836 C
72.0566 59.2637 62.7207 58.1133 V
61.0723 57.8145 66.3096 52.5049 v
71.5449 47.1953 74.4395 44.8594 73.29 44.1758 c
72.1396 43.4932 61.5 50.6289 59.3896 49.3086 c
57.624 48.2012 67.9102 39.2266 68.0674 37.7461 c
68.2227 36.2656 61.6611 39.9375 59.2031 39.6465 c
56.7432 39.3535 63.8574 31 65.5703 28.8398 C
65.6592 27.6465 63.3389 27.1855 61.8174 28.0303 c
61.0039 28.4844 27.0635 49.8682 21.2324 48.4531 C
18.9541 46.9902 39.3291 36.4434 38.1045 35.2363 C
29.0674 38.8418 24.6943 40.334 v
20.1406 41.8877 12.9727 43.2627 14.0762 41.8594 c
15.1748 40.4551 27.5029 35.3223 28.8477 32.9141 C
28.5508 31.6289 25.4629 32.7773 v
22.376 33.9258 13.4219 35.4746 13.5049 34.5078 c
13.5869 33.5391 23.5586 29.0508 23.6221 27.8516 C
22.5088 27.4297 16.4648 27.9365 17.4082 26.875 C
20.1738 23.5977 23.7852 21.2344 V
23.1748 19.1631 23.125 18.9492 28.0596 14.8818 C
27.5146 12.1172 30.8057 11.9043 31.5371 10.5625 C
31.3594 9.20313 32.3125 9.0293 33.4297 8.18652 C
33.5869 6.70703 33.2803 4.20313 39.1309 1.37109 C
38.1045 -2.32129 39.5254 -4.00195 43.9443 -6.37109 C
43.7227 -10.8789 44.5801 -11.0752 47.2891 -12.6465 C
48.4678 -14.9912 49.5811 -15.835 52.7852 -18.1953 C
49.7383 -20.6563 51.501 -21.2402 52.3262 -22.5586 C
51.7998 -26.2295 54.3457 -27.1309 v
56.8926 -28.0313 59.458 -45.0732 72.958 -54.4033 C
71.9883 -54.7891 L
70.2305 -55.3789 65.1299 -57.8184 Y
59.5215 -61.6094 L
54.0439 -63.3574 48.3516 -62.3027 v
44.3047 -61.5537 42.4502 -67.8896 42.0605 -68.1572 C
36.1836 -70.5762 35.7588 -75.9316 v
35.3311 -81.2852 34.5195 -79.9736 Y
29.8359 -81.6016 29.4648 -86.0586 V
26.3848 -87.4131 26.0508 -91.6523 28.2178 -90.3555 c
31.6602 -88.292 36.6475 -84.585 40.4707 -83.4805 c
44.2969 -82.3789 54.5732 -80.165 57.1855 -78.2715 C
59.7861 -78.3438 62.2041 -75.0488 65.2627 -74.6426 c
68.9639 -74.1504 71.9199 -73.5596 75.5029 -74.2832 C
77.9531 -74.8242 L
79.6738 -77.2539 82.5586 -79.2012 81.9619 -79.5742 c
81.2275 -80.0342 81.6719 -83.0283 80.0938 -83.5039 c
78.5186 -83.9805 76.8018 -82.3281 77.6074 -81.0059 c
78.416 -79.6826 81.8428 -80.6367 80.9834 -80.1895 c
80.1221 -79.7383 80.2129 -79.3398 77.6182 -79.875 c
75.0205 -80.4121 73.5234 -82.373 76.6611 -86.7813 C
72.6465 -87.6611 74.7793 -86.7676 72.9053 -85.248 C
73.2119 -85.7373 72.1611 -90.3164 79.9775 -87.6689 C
81.543 -87.3564 82.9795 -86.9121 84.2021 -86.3799 C
84.8252 -86.8086 85.6514 -87.0654 86.7666 -86.9609 C
92.4844 -85.8516 94.6846 -81.6572 92.3604 -79.5996 c
91.458 -78.8027 91.0596 -77.8398 90.9404 -76.8828 C
99.6357 -76.9355 110.9238 -74.6563 116.5732 -71.6602 c
120.9658 -69.3301 121.5928 -67.3828 126.7539 -66.0537 c
140.3779 -62.5449 137.2285 -55.8184 141.0059 -55.1055 c
144.7773 -54.3926 148.7275 -46.043 156.3076 -43.4971 c
160.5293 -42.0781 161.6416 -42.5498 164.1367 -43.2168 c
166.5156 -43.8545 166.9424 -44.3594 Y
167.0811 -41.5918 160.4082 -37.4414 V
f
/BBAccumRotation (0.237982) XT
0 D
88.3047 -79.1055 m
87.9775 -79.3291 87.9434 -80.2168 87.7969 -81.084 C
87.5195 -80.7002 87.1172 -80.3242 86.5654 -79.959 c
86.4492 -79.8838 86.3486 -79.8027 86.2373 -79.7246 C
87.1172 -79.7295 87.8916 -79.9395 87.46 -79.6797 c
86.8242 -79.2998 86.7588 -78.9707 85.4727 -79.127 C
84.207 -78.0449 83.4834 -76.916 83.0801 -75.9531 C
85.0205 -76.3789 L
85.8174 -76.5322 86.6797 -76.6504 87.5889 -76.7324 C
88.2344 -78.0107 88.6709 -78.8564 88.3047 -79.1055 c
f
/BBAccumRotation (0.237982) XT
*U
/BBAccumRotation (0.237982) XT
939.2539 630.0107 m
941.1748 630.1221 942.6191 628.9678 943.8613 628.9019 C
944.0723 630.0161 941.3535 631.7842 941.5947 632.3496 c
941.8369 632.915 941.3555 636.4658 936.7246 637.9868 c
932.0918 639.5059 924.5508 636.5894 y
920.5 635.252 917.8828 635.2363 915.9141 635.9473 c
914.1045 636.6006 913.9063 639.6855 912.4707 640.7031 c
911.0342 641.7217 909.0586 644.9106 y
902.4551 661.3232 891.1748 663.5566 V
887.3975 664.5757 890.3975 662.6855 891.1152 662.1768 c
890.8066 661.3975 885.6621 663.6484 v
877.6074 667.1714 846.4326 672.3027 844.1289 669.9014 c
843.6748 669.4287 848.3262 667.5859 848.2764 667.252 c
848.1768 666.5938 844.2451 666.7246 843.8818 665.8779 C
843.4805 665.1543 846.2324 664.5176 848.3955 662.8535 c
849.4395 662.1748 845.3408 662.0908 v
842.1475 662.0254 849.0488 659.3115 848.7871 658.7808 c
848.5244 658.249 846.5547 658.8955 846.0596 658.0366 c
845.7627 657.5195 848.2686 655.5488 851.1348 653.6514 c
851.8057 653.0698 849.1572 653.3281 v
846.1592 653.6221 850.8232 650.4312 852.8467 649.3618 C
850.1201 649.2021 851.624 648.2061 855.334 646.5645 C
852.4766 645.9844 863.5029 641.9282 869.7539 636.5615 c
869.3662 635.248 870.3799 634.6875 v
871.3916 634.1265 875.1006 631.6592 876.207 630.3799 c
877.3135 629.1025 876.2852 628.1646 878.125 627.6001 c
879.9639 627.0366 881.1533 621.6851 884.2656 620.5752 C
886.1104 618.1523 889.1787 616.8857 894.6855 619.8398 C
895.1055 618.832 892.6396 617.7588 890.8115 615.4321 c
887.5742 611.2939 886.2656 610.1597 v
883.9072 608.1113 879.9629 609.3262 876.6729 607.3281 c
875.1494 605.1221 875.1836 603.627 V
875.0625 602.1748 872.3018 602.582 872.2354 600.2026 c
872.166 597.8237 872.9951 595.1348 872.1475 594.6211 c
871.2979 594.1064 868.4043 593.2666 869.625 590.0332 C
867.6963 588.5796 868.1582 585.9731 868.877 586.9443 c
869.5938 587.9155 872.8926 592.4443 876.7568 594.374 c
880.6201 596.3022 884.042 599.5991 885.1992 600.1318 c
886.3545 600.6641 887.9404 600.9116 891.1357 601.8721 c
894.334 602.833 895.0215 603.3457 897.2881 602.6445 c
898.1279 602.3828 900.9502 603.5801 901.4805 603.3521 c
902.626 602.3354 902.2373 601.8994 v
901.8496 601.4634 899.2754 600.4365 899.2705 601.417 c
899.2646 602.3975 900.0566 601.2041 900.0186 601.8726 c
899.9795 602.542 898.7344 602.625 898.71 601.2813 c
898.6836 599.937 898.5186 598.3774 899.1953 598.2627 c
899.8721 598.1475 903.8662 597.8643 904.3506 599.2861 c
904.8359 600.7085 904.9238 602.7275 902.7363 603.9414 C
908.4688 607.4775 908.9258 608.4854 V
911.3066 608.416 918.5234 613.0195 921.3623 616.5928 C
928.4238 621.2378 932.709 628.3047 934.5068 628.4604 c
937.0781 628.6836 939.2539 630.0107 y
Bb
1 (Unnamed gradient 305) 910.5254 597.7739 113.1986 91.3893 1 0 0 1 0 0 Bg
-36 84 83.7975 35.9132 868.6211 579.8149 Xm
-3388.4226 7906.3193 83.7975 35.9132 4256.833 -7326.0137 Bc
-35.7895 83.5088 83.7975 35.9132 868.4102 580.3062 Bm
-3388.4226 7906.3193 83.7975 35.9132 832.6211 663.8149 Bc
f
0 BB
/BBAccumRotation (0.058217) XT
0.67718 0.608667 0.59826 0.476326 0.247059 0.247059 0.247059 Xa
524.6924 -27.9229 m
527.1924 -27.7773 529.0732 -29.2803 530.6895 -29.3662 C
530.9648 -27.916 527.4258 -25.6143 527.7402 -24.8779 c
528.0547 -24.1426 527.4277 -19.5205 521.4004 -17.541 c
515.3701 -15.5635 505.5547 -19.3594 y
500.2822 -21.1016 496.876 -21.1211 494.3135 -20.1953 c
491.959 -19.3457 491.7002 -15.3301 489.8311 -14.0059 c
487.9619 -12.6797 485.3906 -8.5293 y
476.7959 12.834 462.1133 15.7402 V
457.1963 17.0674 461.1016 14.6074 462.0352 13.9453 c
461.6338 12.9307 454.9375 15.8604 v
444.4531 20.4453 403.876 27.125 400.877 23.999 c
400.2861 23.3838 406.3398 20.9844 406.2764 20.5508 c
406.1465 19.6934 401.0293 19.8633 400.5557 18.7617 C
400.0332 17.8203 403.6152 16.9912 406.4316 14.8252 c
407.7891 13.9414 402.4551 13.832 v
398.2988 13.748 407.2813 10.2148 406.9414 9.52441 c
406.5986 8.83203 404.0352 9.67383 403.3906 8.55566 c
403.0049 7.88281 406.2666 5.31738 409.9961 2.84766 c
410.8701 2.09082 407.4229 2.42676 v
403.5195 2.80957 409.5908 -1.34375 412.2246 -2.73633 C
408.6758 -2.94336 410.6328 -4.24023 415.4619 -6.37695 C
411.7432 -7.13086 426.0947 -12.4111 434.2314 -19.3965 c
433.7266 -21.1055 435.0459 -21.8359 v
436.3633 -22.5654 441.1904 -25.7773 442.6309 -27.4424 c
444.0703 -29.1045 442.7324 -30.3262 445.127 -31.0605 c
447.5205 -31.7939 449.0684 -38.7598 453.1201 -40.2041 C
455.5215 -43.3574 459.5137 -45.0059 466.6826 -41.1611 C
467.2295 -42.4727 464.0195 -43.8701 461.6396 -46.8984 c
457.4258 -52.2842 455.7227 -53.7607 v
452.6543 -56.4277 447.5195 -54.8457 443.2373 -57.4473 c
441.2539 -60.3184 441.2988 -62.2637 V
441.1406 -64.1543 437.5469 -63.624 437.4619 -66.7207 c
437.3711 -69.8174 438.4502 -73.3184 437.3467 -73.9863 c
436.2402 -74.6563 432.4746 -75.749 434.0625 -79.957 C
431.5537 -81.8496 432.1543 -85.2422 433.0898 -83.9785 c
434.0225 -82.7148 438.3164 -76.8193 443.3457 -74.3066 c
448.374 -71.7979 452.8291 -67.5059 454.335 -66.8135 c
455.8389 -66.1201 457.9023 -65.7979 462.0615 -64.5479 c
466.2246 -63.2969 467.1191 -62.6299 470.0703 -63.543 c
471.1631 -63.8828 474.8369 -62.3252 475.5264 -62.6211 c
477.0176 -63.9453 476.5117 -64.5127 v
476.0068 -65.0801 472.6563 -66.417 472.6494 -65.1406 c
472.6416 -63.8643 473.6729 -65.418 473.624 -64.5469 c
473.5732 -63.6758 471.9521 -63.5684 471.9209 -65.3174 c
471.8857 -67.0664 471.6719 -69.0967 472.5518 -69.2461 c
473.4326 -69.3965 478.6318 -69.7646 479.2617 -67.9141 c
479.8945 -66.0625 480.0088 -63.4355 477.1621 -61.8545 C
484.623 -57.252 485.2168 -55.9404 V
488.3164 -56.0313 497.709 -50.0391 501.4043 -45.3877 C
510.5967 -39.3418 516.1729 -30.1436 518.5137 -29.9404 c
521.8594 -29.6504 524.6924 -27.9229 y
f
/BBAccumRotation (0.058217) XT
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
